"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/[...nextauth]";
exports.ids = ["pages/api/auth/[...nextauth]"];
exports.modules = {

/***/ "(api-node)/./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUser: () => (/* binding */ createUser),\n/* harmony export */   getTrialStatus: () => (/* binding */ getTrialStatus),\n/* harmony export */   getUserByEmail: () => (/* binding */ getUserByEmail),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   isAuthenticated: () => (/* binding */ isAuthenticated),\n/* harmony export */   isTrialActive: () => (/* binding */ isTrialActive),\n/* harmony export */   requireAuthentication: () => (/* binding */ requireAuthentication),\n/* harmony export */   updateSubscriptionStatus: () => (/* binding */ updateSubscriptionStatus),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword)\n/* harmony export */ });\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/react */ \"next-auth/react\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var _mongodb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mongodb */ \"(api-node)/./lib/mongodb.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([bcryptjs__WEBPACK_IMPORTED_MODULE_1__]);\nbcryptjs__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nasync function hashPassword(password) {\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].hash(password, 12);\n}\nasync function verifyPassword(password, hashedPassword) {\n    try {\n        // Special case for test user (makes debugging easier)\n        if (password === 'password123' && hashedPassword === 'password123') {\n            console.log('Special case: Test user with unhashed password');\n            return true;\n        }\n        // For debugging\n        console.log(`Verifying password - Hash starts with: ${hashedPassword.substring(0, 10)}...`);\n        return await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].compare(password, hashedPassword);\n    } catch (error) {\n        console.error('Error comparing passwords:', error);\n        console.error('Password hash:', hashedPassword ? hashedPassword.substring(0, 10) + '...' : 'NULL');\n        return false;\n    }\n}\n// Get user from MongoDB using their email\nasync function getUserByEmail(email) {\n    try {\n        if (!email) {\n            console.error('getUserByEmail called with empty email');\n            return null;\n        }\n        console.log(`Looking up user with email: ${email}`);\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)();\n        const user = await db.collection('users').findOne({\n            email\n        });\n        if (user) {\n            console.log(`Found user with email ${email}, ID: ${user._id}`);\n        } else {\n            console.log(`No user found with email: ${email}`);\n        }\n        return user;\n    } catch (error) {\n        console.error('Error in getUserByEmail:', error);\n        throw new Error(`Database error when fetching user: ${error.message}`);\n    }\n}\n// Create a new user in MongoDB\nasync function createUser(userData) {\n    try {\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)();\n        const { email, password, name, trial_start_date, is_subscribed } = userData;\n        console.log(`Hashing password for new user: ${email}`);\n        const hashedPassword = await hashPassword(password);\n        // Format trial start date properly\n        const trialStartDate = trial_start_date ? new Date(trial_start_date) : new Date();\n        // Create a full user record\n        const userDoc = {\n            email,\n            password: hashedPassword,\n            name: name || email.split('@')[0],\n            trial_start_date: trialStartDate,\n            is_subscribed: is_subscribed || false,\n            createdAt: new Date(),\n            lastLogin: new Date()\n        };\n        console.log(`Inserting new user into database: ${email}`);\n        const result = await db.collection('users').insertOne(userDoc);\n        console.log(`User inserted successfully, ID: ${result.insertedId}`);\n        // Return user object with ID for session creation\n        return {\n            id: result.insertedId.toString(),\n            _id: result.insertedId,\n            email,\n            name: userDoc.name,\n            trial_start_date: trialStartDate,\n            is_subscribed: userDoc.is_subscribed\n        };\n    } catch (error) {\n        console.error('Error in createUser:', error);\n        throw new Error(`Database error when creating user: ${error.message}`);\n    }\n}\n// Check if a user is authenticated for API routes\nasync function isAuthenticated(req, res) {\n    const session = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_0__.getSession)({\n        req\n    });\n    if (!session) {\n        res.status(401).json({\n            error: 'Not authenticated'\n        });\n        return false;\n    }\n    return session;\n}\n// Check if trial is active for a user\nasync function isTrialActive(userId) {\n    try {\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)();\n        // Get the user with the given id\n        const user = await db.collection('users').findOne({\n            _id: userId\n        });\n        if (!user) {\n            return false;\n        }\n        // If user is subscribed, trial status doesn't matter\n        if (user.is_subscribed) {\n            return true;\n        }\n        // Check if the trial has expired (7 days from start)\n        const trialStartDate = user.trial_start_date ? new Date(user.trial_start_date) : null;\n        if (!trialStartDate) {\n            return false; // No trial start date found\n        }\n        // Calculate trial end date (7 days after start)\n        const trialEndDate = new Date(trialStartDate);\n        trialEndDate.setDate(trialEndDate.getDate() + 7);\n        // Check if current date is before trial end date\n        const currentDate = new Date();\n        return currentDate < trialEndDate;\n    } catch (error) {\n        console.error('Error checking trial status:', error);\n        return false; // Default to trial expired on error\n    }\n}\n// Get trial status information for a user\nasync function getTrialStatus(userId) {\n    try {\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)();\n        // Get the user with the given id\n        const user = await db.collection('users').findOne({\n            _id: userId\n        });\n        if (!user) {\n            throw new Error('User not found');\n        }\n        // If user is already subscribed\n        if (user.is_subscribed) {\n            return {\n                isActive: true,\n                isSubscribed: true,\n                trialStartDate: user.trial_start_date,\n                trialEndDate: null,\n                daysRemaining: 0,\n                message: 'Subscribed account'\n            };\n        }\n        // Calculate trial information\n        const trialStartDate = user.trial_start_date ? new Date(user.trial_start_date) : new Date();\n        const trialEndDate = new Date(trialStartDate);\n        trialEndDate.setDate(trialEndDate.getDate() + 7);\n        const currentDate = new Date();\n        const isActive = currentDate < trialEndDate;\n        // Calculate days remaining\n        const diffTime = trialEndDate.getTime() - currentDate.getTime();\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        const daysRemaining = Math.max(0, diffDays);\n        // Return trial status\n        return {\n            isActive,\n            isSubscribed: false,\n            trialStartDate,\n            trialEndDate,\n            daysRemaining,\n            message: isActive ? `Trial active - ${daysRemaining} days remaining` : 'Trial has expired'\n        };\n    } catch (error) {\n        console.error('Error getting trial status:', error);\n        throw error;\n    }\n}\n// Update subscription status\nasync function updateSubscriptionStatus(userId, isSubscribed) {\n    try {\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)();\n        // Update the user with subscription status\n        const result = await db.collection('users').updateOne({\n            _id: userId\n        }, {\n            $set: {\n                is_subscribed: isSubscribed\n            }\n        });\n        return result.modifiedCount > 0;\n    } catch (error) {\n        console.error('Error updating subscription status:', error);\n        throw error;\n    }\n}\n// Check if a user is authenticated, has active trial/subscription and redirect if needed\nasync function requireAuthentication(context) {\n    const session = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_0__.getSession)(context);\n    // If no user is logged in, redirect to login\n    if (!session) {\n        return {\n            redirect: {\n                destination: '/login',\n                permanent: false\n            }\n        };\n    }\n    try {\n        // Get full user data including trial/subscription info\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)();\n        const user = await db.collection('users').findOne({\n            email: session.user.email\n        });\n        // If user not found in database but has session\n        if (!user) {\n            // Clear session and redirect to login\n            return {\n                redirect: {\n                    destination: '/login',\n                    permanent: false\n                }\n            };\n        }\n        // Check if subscribed or trial is active\n        const isSubscribed = user.is_subscribed;\n        if (isSubscribed) {\n            // User is subscribed, allow access\n            return {\n                props: {\n                    user: {\n                        ...session.user,\n                        isSubscribed: true,\n                        trialActive: true\n                    }\n                }\n            };\n        }\n        // Check trial status\n        const trialStartDate = user.trial_start_date ? new Date(user.trial_start_date) : null;\n        if (!trialStartDate) {\n            // No trial start date, redirect to upgrade\n            return {\n                redirect: {\n                    destination: '/upgrade',\n                    permanent: false\n                }\n            };\n        }\n        // Calculate trial end date and compare with current date\n        const trialEndDate = new Date(trialStartDate);\n        trialEndDate.setDate(trialEndDate.getDate() + 7);\n        const currentDate = new Date();\n        const trialActive = currentDate < trialEndDate;\n        if (!trialActive) {\n            // Trial has expired, redirect to upgrade page\n            return {\n                redirect: {\n                    destination: '/upgrade',\n                    permanent: false\n                }\n            };\n        }\n        // Calculate days remaining in trial\n        const diffTime = trialEndDate.getTime() - currentDate.getTime();\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        const daysRemaining = Math.max(0, diffDays);\n        // Trial is active, allow access with trial info\n        return {\n            props: {\n                user: {\n                    ...session.user,\n                    isSubscribed: false,\n                    trialActive: true,\n                    trialEndDate: trialEndDate.toISOString(),\n                    daysRemaining\n                }\n            }\n        };\n    } catch (error) {\n        console.error('Error in requireAuthentication:', error);\n        // On error, default to allowing access with warning\n        // This prevents locked-out users in case of database errors\n        return {\n            props: {\n                user: {\n                    ...session.user,\n                    isSubscribed: false,\n                    trialActive: true,\n                    trialStatus: 'unknown',\n                    error: 'Could not verify subscription status'\n                }\n            }\n        };\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/auth.js\n");

/***/ }),

/***/ "(api-node)/./lib/mongodb.js":
/*!************************!*\
  !*** ./lib/mongodb.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DB_NAME: () => (/* binding */ DB_NAME),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getDatabase: () => (/* binding */ getDatabase)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n\n// Database Name - change this if you want to use a different database\nconst DB_NAME = 'rehustle';\n// MongoDB connection config with several fallback options\n// This helps avoid SSL certificate issues and connection problems\nfunction getMongoConfig() {\n    // Main connection URI from env\n    const uri = process.env.MONGODB_URI;\n    if (!uri) {\n        console.error('MONGODB_URI not provided');\n        return {\n            uri: null,\n            options: {}\n        };\n    }\n    // Parse username and password from URI for diagnostics only\n    try {\n        // Extract credentials for logging (avoid logging actual credentials)\n        if (uri.includes('@')) {\n            const credentialPart = uri.split('@')[0].split('//')[1];\n            if (credentialPart && credentialPart.includes(':')) {\n                const username = credentialPart.split(':')[0];\n                console.log(`Using MongoDB with username: ${username}`);\n            }\n        }\n    } catch (error) {\n    // Ignore parsing errors\n    }\n    // For URI that uses SRV records\n    const isSrv = uri.includes('+srv');\n    // Start with most compatible options\n    const baseOptions = {\n        connectTimeoutMS: 30000,\n        serverSelectionTimeoutMS: 30000,\n        useNewUrlParser: true,\n        useUnifiedTopology: true\n    };\n    // Direct connection can sometimes bypass SSL issues\n    if (isSrv) {\n        console.log('Using MongoDB+SRV connection');\n        // Try to simplify the connection URI\n        let parsedUri = uri;\n        try {\n            // Strip query parameters and add back only essential ones\n            if (uri.includes('?')) {\n                parsedUri = uri.split('?')[0] + '?retryWrites=true&w=majority';\n                console.log('Simplified MongoDB connection string');\n            }\n        } catch (e) {\n            // Use original if parsing fails\n            console.error('Error parsing MongoDB URI:', e);\n            parsedUri = uri;\n        }\n        return {\n            uri: parsedUri,\n            options: {\n                ...baseOptions,\n                directConnection: false\n            }\n        };\n    } else {\n        // Standard connection\n        console.log('Using standard MongoDB connection');\n        return {\n            uri,\n            options: baseOptions\n        };\n    }\n}\n// Get connection configuration\nconst { uri, options } = getMongoConfig();\n// Check if MongoDB URI is configured\nif (!process.env.MONGODB_URI) {\n    throw new Error(\"Please define the MONGODB_URI environment variable.\");\n}\n// Global variables to cache the MongoDB connection promise\nlet client;\nlet clientPromise;\n// Create a connected client or a dummy client that fails gracefully\nasync function createClient() {\n    if (!uri) {\n        console.error(\"MongoDB URI is not provided\");\n        return null;\n    }\n    try {\n        const mongoClient = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri, options);\n        // Connect with timeout\n        const connectPromise = mongoClient.connect();\n        // Return the connected client or null if connection fails\n        return await connectPromise;\n    } catch (error) {\n        console.error(\"Failed to create MongoDB client:\", error);\n        return null;\n    }\n}\n// Setup the global promise for the MongoDB client\nif (true) {\n    // In development mode, use a global variable so that the value\n    // is preserved across module reloads caused by HMR (Hot Module Replacement).\n    if (!global._mongoClientPromise) {\n        global._mongoClientPromise = createClient().catch((err)=>{\n            console.error(\"Failed to connect to MongoDB:\", err);\n            return null;\n        });\n    }\n    clientPromise = global._mongoClientPromise;\n} else {}\n/**\n * Helper function to get the MongoDB database\n * Includes fallback to in-memory storage if MongoDB is unavailable\n * @returns {Promise<Db>} MongoDB database or fallback object\n */ async function getDatabase() {\n    try {\n        // Await the client with a timeout\n        const client = await Promise.race([\n            clientPromise,\n            new Promise((_, reject)=>setTimeout(()=>reject(new Error('MongoDB connection timeout')), 5000))\n        ]);\n        // If client is null (connection failed), throw error to use fallback\n        if (!client) {\n            throw new Error(\"MongoDB client is null\");\n        }\n        // Return the database \n        return client.db(DB_NAME);\n    } catch (error) {\n        console.error(\"Error getting MongoDB database:\", error.message);\n        // Create a localStorage-backed fallback\n        return createLocalStorageFallbackDb();\n    }\n}\n/**\n * Creates an in-memory fallback database that uses localStorage when available\n * This allows the application to function without MongoDB\n * @returns {Object} Object that mimics MongoDB database API\n */ function createLocalStorageFallbackDb() {\n    // Use an in-memory store as fallback\n    console.warn(\"Using in-memory/localStorage fallback for database\");\n    // Collection data will be stored here in memory\n    const collections = {};\n    // Try to load existing data from localStorage or global memory\n    try {\n        const knownCollections = [\n            'users',\n            'deals',\n            'accounts',\n            'sessions'\n        ];\n        // Initialize collections\n        for (const collection of knownCollections){\n            collections[collection] = [];\n        }\n        // Client-side: Use localStorage\n        if (false) {} else if (typeof global !== 'undefined' && global._localDbStorage) {\n            for (const collection of knownCollections){\n                const storedData = global._localDbStorage[`rehustle_${collection}`];\n                if (storedData) {\n                    try {\n                        collections[collection] = JSON.parse(storedData);\n                        console.log(`Loaded ${collections[collection].length} items from server memory for ${collection}`);\n                    } catch (e) {\n                        console.error(`Failed to parse server memory data for ${collection}:`, e);\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        console.error(\"Error accessing storage:\", e);\n    }\n    // Helper to save a collection to localStorage\n    const saveCollection = (name, data)=>{\n        try {\n            if (false) {} else if (typeof global !== 'undefined') {\n                // Server-side persistence for development/testing\n                if (!global._localDbStorage) {\n                    global._localDbStorage = {};\n                }\n                global._localDbStorage[`rehustle_${name}`] = JSON.stringify(data);\n            }\n        } catch (e) {\n            console.error(`Failed to save ${name} to localStorage:`, e);\n        }\n    };\n    // Return a MongoDB-like interface\n    return {\n        collection: (name)=>{\n            // Initialize collection if it doesn't exist\n            if (!collections[name]) {\n                collections[name] = [];\n            }\n            // Return a MongoDB-like collection interface\n            return {\n                findOne: async (query = {})=>{\n                    console.log(`[LocalDB] findOne in ${name}:`, query);\n                    const items = collections[name] || [];\n                    // Simple query matching\n                    if (query._id) {\n                        return items.find((item)=>item._id === query._id) || null;\n                    }\n                    // Match first item that has all query properties\n                    return items.find((item)=>{\n                        return Object.entries(query).every(([key, value])=>item[key] === value);\n                    }) || null;\n                },\n                find: (query = {})=>{\n                    console.log(`[LocalDB] find in ${name}:`, query);\n                    const items = collections[name] || [];\n                    // Filter items by query\n                    let results = items;\n                    if (Object.keys(query).length > 0) {\n                        results = items.filter((item)=>{\n                            return Object.entries(query).every(([key, value])=>item[key] === value);\n                        });\n                    }\n                    // Return a cursor-like object\n                    return {\n                        sort: (sortSpec)=>{\n                            // Simple sorting by a single field\n                            if (sortSpec && Object.keys(sortSpec).length > 0) {\n                                const [field, order] = Object.entries(sortSpec)[0];\n                                results.sort((a, b)=>{\n                                    if (a[field] < b[field]) return order === 1 ? -1 : 1;\n                                    if (a[field] > b[field]) return order === 1 ? 1 : -1;\n                                    return 0;\n                                });\n                            }\n                            return {\n                                toArray: async ()=>results\n                            };\n                        },\n                        toArray: async ()=>results\n                    };\n                },\n                insertOne: async (doc)=>{\n                    console.log(`[LocalDB] insertOne in ${name}:`, doc);\n                    // Generate an ID if none provided\n                    const newDoc = {\n                        ...doc,\n                        _id: doc._id || `local_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`\n                    };\n                    collections[name].push(newDoc);\n                    saveCollection(name, collections[name]);\n                    return {\n                        insertedId: newDoc._id,\n                        acknowledged: true\n                    };\n                },\n                deleteOne: async (filter)=>{\n                    console.log(`[LocalDB] deleteOne in ${name}:`, filter);\n                    const items = collections[name];\n                    const initialLength = items.length;\n                    // Remove the first matching item\n                    const index = items.findIndex((item)=>{\n                        return Object.entries(filter).every(([key, value])=>item[key] === value);\n                    });\n                    if (index !== -1) {\n                        items.splice(index, 1);\n                        saveCollection(name, items);\n                    }\n                    return {\n                        deletedCount: initialLength - items.length,\n                        acknowledged: true\n                    };\n                },\n                updateOne: async (filter, update)=>{\n                    console.log(`[LocalDB] updateOne in ${name}:`, filter, update);\n                    const items = collections[name];\n                    // Find the item to update\n                    const index = items.findIndex((item)=>{\n                        return Object.entries(filter).every(([key, value])=>item[key] === value);\n                    });\n                    if (index !== -1) {\n                        // Apply $set updates\n                        if (update.$set) {\n                            items[index] = {\n                                ...items[index],\n                                ...update.$set\n                            };\n                        }\n                        saveCollection(name, items);\n                        return {\n                            modifiedCount: 1,\n                            acknowledged: true\n                        };\n                    }\n                    return {\n                        modifiedCount: 0,\n                        acknowledged: true\n                    };\n                },\n                findOneAndUpdate: async (filter, update, options = {})=>{\n                    console.log(`[LocalDB] findOneAndUpdate in ${name}:`, filter, update, options);\n                    const items = collections[name];\n                    // Find the item to update\n                    const index = items.findIndex((item)=>{\n                        return Object.entries(filter).every(([key, value])=>item[key] === value);\n                    });\n                    let returnValue = null;\n                    if (index !== -1) {\n                        // Store the original value if returning before update\n                        if (!options.returnDocument || options.returnDocument === 'before') {\n                            returnValue = {\n                                ...items[index]\n                            };\n                        }\n                        // Apply $set updates\n                        if (update.$set) {\n                            items[index] = {\n                                ...items[index],\n                                ...update.$set\n                            };\n                        }\n                        // Store the updated value if returning after update\n                        if (options.returnDocument === 'after') {\n                            returnValue = {\n                                ...items[index]\n                            };\n                        }\n                        saveCollection(name, items);\n                    } else if (options.upsert) {\n                        // Create a new document if upsert is true\n                        const newDoc = {\n                            ...filter,\n                            ...update.$set,\n                            _id: `local_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`\n                        };\n                        items.push(newDoc);\n                        if (options.returnDocument === 'after') {\n                            returnValue = {\n                                ...newDoc\n                            };\n                        }\n                        saveCollection(name, items);\n                    }\n                    return {\n                        value: returnValue,\n                        ok: 1\n                    };\n                }\n            };\n        },\n        listCollections: ()=>({\n                toArray: async ()=>Object.keys(collections).map((name)=>({\n                            name\n                        }))\n            }),\n        command: async (cmd)=>{\n            // Simple support for ping command\n            if (cmd.ping) {\n                return {\n                    ok: 0\n                }; // Return 0 to indicate it's not a real MongoDB\n            }\n            return {\n                ok: 0\n            };\n        },\n        // Add a special method to indicate this is the fallback\n        isFallback: true\n    };\n}\n// Export clientPromise\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientPromise);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/mongodb.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/auth/[...nextauth].js */ \"(api-node)/./pages/api/auth/[...nextauth].js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/auth/[...nextauth]\",\n        pathname: \"/api/auth/[...nextauth]\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGYXV0aCUyRiU1Qi4uLm5leHRhdXRoJTVEJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZhdXRoJTJGJTVCLi4ubmV4dGF1dGglNUQuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDOEQ7QUFDOUQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHdEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyx3REFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0uanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2F1dGgvWy4uLm5leHRhdXRoXVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2F1dGgvWy4uLm5leHRhdXRoXVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/auth/[...nextauth].js":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _next_auth_mongodb_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @next-auth/mongodb-adapter */ \"@next-auth/mongodb-adapter\");\n/* harmony import */ var _next_auth_mongodb_adapter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_next_auth_mongodb_adapter__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/mongodb */ \"(api-node)/./lib/mongodb.js\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/auth */ \"(api-node)/./lib/auth.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_auth__WEBPACK_IMPORTED_MODULE_4__]);\n_lib_auth__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n// Let's simplify our approach and make NextAuth more resilient\n// We'll avoid complex setup that could throw errors\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (next_auth__WEBPACK_IMPORTED_MODULE_0___default()({\n    // Add adapter only if it's available in a try/catch\n    ...(()=>{\n        try {\n            return {\n                adapter: (0,_next_auth_mongodb_adapter__WEBPACK_IMPORTED_MODULE_2__.MongoDBAdapter)(_lib_mongodb__WEBPACK_IMPORTED_MODULE_3__[\"default\"])\n            };\n        } catch (e) {\n            console.warn(\"MongoDB adapter initialization failed, falling back to JWT only\");\n            return {}; // No adapter if MongoDB is unavailable\n        }\n    })(),\n    providers: [\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default()({\n            name: \"Credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"text\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials) {\n                    console.error('No credentials provided');\n                    return null;\n                }\n                const { email, password } = credentials;\n                if (!email || !password) {\n                    console.error('Missing email or password');\n                    return null;\n                }\n                try {\n                    console.log(`Attempting to authorize: ${email}`);\n                    // Try to create test user if they don't exist\n                    if (email === 'test@example.com' && password === 'password123') {\n                        try {\n                            const existingUser = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_4__.getUserByEmail)(email);\n                            if (!existingUser) {\n                                console.log('Creating test user since it does not exist');\n                                const testUser = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_4__.createUser)({\n                                    email: 'test@example.com',\n                                    password: 'password123',\n                                    name: 'Test User',\n                                    trial_start_date: new Date().toISOString(),\n                                    is_subscribed: false\n                                });\n                                console.log(`Test user created with ID: ${testUser.id}`);\n                                // Return the newly created test user\n                                return {\n                                    id: testUser.id,\n                                    email: testUser.email,\n                                    name: testUser.name,\n                                    userId: testUser.id\n                                };\n                            }\n                        } catch (e) {\n                            console.error('Error checking/creating test user:', e);\n                        }\n                    }\n                    // Fetch the user from MongoDB/fallback storage\n                    const user = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_4__.getUserByEmail)(email);\n                    if (!user) {\n                        console.log(`No user found with email: ${email}`);\n                        return null;\n                    }\n                    console.log(`User found: ${user.email}, ID: ${user._id}, verifying password`);\n                    // Verify the password\n                    const isValid = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_4__.verifyPassword)(password, user.password);\n                    if (!isValid) {\n                        console.log('Invalid password');\n                        return null;\n                    }\n                    console.log('Password verified successfully');\n                    // Convert ID to string if it's an object\n                    const userId = typeof user._id === 'object' ? user._id.toString() : user._id;\n                    // Return a user object excluding the password\n                    return {\n                        id: userId,\n                        email: user.email,\n                        name: user.name || '',\n                        userId: userId\n                    };\n                } catch (error) {\n                    console.error('Error in authorize:', error);\n                    // Don't throw, return null instead to show the error on the login form\n                    return null;\n                }\n            }\n        })\n    ],\n    session: {\n        strategy: \"jwt\"\n    },\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n                token.userId = user.id; // Ensure userId is in the token\n                token.name = user.name;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (token) {\n                session.user.id = token.id;\n                session.user.userId = token.id; // Add userId to session for consistency\n                if (token.name) {\n                    session.user.name = token.name;\n                }\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/login\",\n        error: \"/login\",\n        newUser: \"/dashboard\"\n    },\n    secret: process.env.NEXTAUTH_SECRET || \"a-strong-secret-for-development-only\",\n    debug: \"development\" === 'development'\n}));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/auth/[...nextauth].js\n");

/***/ }),

/***/ "@next-auth/mongodb-adapter":
/*!*********************************************!*\
  !*** external "@next-auth/mongodb-adapter" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("@next-auth/mongodb-adapter");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = import("bcryptjs");;

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next-auth/react":
/*!**********************************!*\
  !*** external "next-auth/react" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("next-auth/react");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();