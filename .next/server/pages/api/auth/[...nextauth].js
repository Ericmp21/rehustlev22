"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/[...nextauth]";
exports.ids = ["pages/api/auth/[...nextauth]"];
exports.modules = {

/***/ "(api-node)/./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUser: () => (/* binding */ createUser),\n/* harmony export */   getTrialStatus: () => (/* binding */ getTrialStatus),\n/* harmony export */   getUserByEmail: () => (/* binding */ getUserByEmail),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   isAuthenticated: () => (/* binding */ isAuthenticated),\n/* harmony export */   isTrialActive: () => (/* binding */ isTrialActive),\n/* harmony export */   requireAuthentication: () => (/* binding */ requireAuthentication),\n/* harmony export */   updateSubscriptionStatus: () => (/* binding */ updateSubscriptionStatus),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword)\n/* harmony export */ });\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/react */ \"next-auth/react\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var _mongodb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mongodb */ \"(api-node)/./lib/mongodb.js\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/User */ \"(api-node)/./models/User.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([bcryptjs__WEBPACK_IMPORTED_MODULE_1__]);\nbcryptjs__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nasync function hashPassword(password) {\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].hash(password, 12);\n}\nasync function verifyPassword(password, hashedPassword) {\n    try {\n        // Special case for test user (makes debugging easier)\n        if (password === 'password123' && hashedPassword === 'password123') {\n            console.log('Special case: Test user with unhashed password');\n            return true;\n        }\n        // For debugging\n        console.log(`Verifying password - Hash starts with: ${hashedPassword.substring(0, 10)}...`);\n        return await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].compare(password, hashedPassword);\n    } catch (error) {\n        console.error('Error comparing passwords:', error);\n        console.error('Password hash:', hashedPassword ? hashedPassword.substring(0, 10) + '...' : 'NULL');\n        return false;\n    }\n}\n// Get user from MongoDB using their email\nasync function getUserByEmail(email) {\n    try {\n        if (!email) {\n            console.error('getUserByEmail called with empty email');\n            return null;\n        }\n        console.log(`Looking up user with email: ${email}`);\n        // Connect to the database\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        // Find user by email\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOne({\n            email\n        });\n        if (user) {\n            console.log(`Found user with email ${email}, ID: ${user._id}`);\n        } else {\n            console.log(`No user found with email: ${email}`);\n        }\n        return user;\n    } catch (error) {\n        console.error('Error in getUserByEmail:', error);\n        throw new Error(`Database error when fetching user: ${error.message}`);\n    }\n}\n// Create a new user in MongoDB\nasync function createUser(userData) {\n    try {\n        // Connect to the database\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        const { email, password, name, trial_start_date, is_subscribed } = userData;\n        console.log(`Hashing password for new user: ${email}`);\n        const hashedPassword = await hashPassword(password);\n        // Format trial start date properly\n        const trialStartDate = trial_start_date ? new Date(trial_start_date) : new Date();\n        // Create a full user record\n        const userDoc = {\n            email,\n            password: hashedPassword,\n            name: name || email.split('@')[0],\n            trial_start_date: trialStartDate,\n            is_subscribed: is_subscribed || false,\n            createdAt: new Date(),\n            lastLogin: new Date()\n        };\n        console.log(`Creating new user in database: ${email}`);\n        const newUser = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].create(userDoc);\n        console.log(`User created successfully, ID: ${newUser._id}`);\n        // Return user object with ID for session creation\n        return {\n            id: newUser._id.toString(),\n            _id: newUser._id,\n            email,\n            name: userDoc.name,\n            trial_start_date: trialStartDate,\n            is_subscribed: userDoc.is_subscribed\n        };\n    } catch (error) {\n        console.error('Error in createUser:', error);\n        throw new Error(`Database error when creating user: ${error.message}`);\n    }\n}\n// Check if a user is authenticated for API routes\nasync function isAuthenticated(req, res) {\n    const session = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_0__.getSession)({\n        req\n    });\n    if (!session) {\n        res.status(401).json({\n            error: 'Not authenticated'\n        });\n        return false;\n    }\n    return session;\n}\n// Check if trial is active for a user\nasync function isTrialActive(userId) {\n    try {\n        // Connect to the database\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        // Get the user with the given id\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findById(userId);\n        if (!user) {\n            return false;\n        }\n        // If user is subscribed, trial status doesn't matter\n        if (user.is_subscribed) {\n            return true;\n        }\n        // Check if the trial has expired (7 days from start)\n        const trialStartDate = user.trial_start_date ? new Date(user.trial_start_date) : null;\n        if (!trialStartDate) {\n            return false; // No trial start date found\n        }\n        // Calculate trial end date (7 days after start)\n        const trialEndDate = new Date(trialStartDate);\n        trialEndDate.setDate(trialEndDate.getDate() + 7);\n        // Check if current date is before trial end date\n        const currentDate = new Date();\n        return currentDate < trialEndDate;\n    } catch (error) {\n        console.error('Error checking trial status:', error);\n        return false; // Default to trial expired on error\n    }\n}\n// Get trial status information for a user\nasync function getTrialStatus(userId) {\n    try {\n        // Connect to the database\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        // Get the user with the given id\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findById(userId);\n        if (!user) {\n            throw new Error('User not found');\n        }\n        // If user is already subscribed\n        if (user.is_subscribed) {\n            return {\n                isActive: true,\n                isSubscribed: true,\n                trialStartDate: user.trial_start_date,\n                trialEndDate: null,\n                daysRemaining: 0,\n                message: 'Subscribed account'\n            };\n        }\n        // Calculate trial information\n        const trialStartDate = user.trial_start_date ? new Date(user.trial_start_date) : new Date();\n        const trialEndDate = new Date(trialStartDate);\n        trialEndDate.setDate(trialEndDate.getDate() + 7);\n        const currentDate = new Date();\n        const isActive = currentDate < trialEndDate;\n        // Calculate days remaining\n        const diffTime = trialEndDate.getTime() - currentDate.getTime();\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        const daysRemaining = Math.max(0, diffDays);\n        // Return trial status\n        return {\n            isActive,\n            isSubscribed: false,\n            trialStartDate,\n            trialEndDate,\n            daysRemaining,\n            message: isActive ? `Trial active - ${daysRemaining} days remaining` : 'Trial has expired'\n        };\n    } catch (error) {\n        console.error('Error getting trial status:', error);\n        throw error;\n    }\n}\n// Update subscription status\nasync function updateSubscriptionStatus(userId, isSubscribed) {\n    try {\n        // Connect to the database\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        // Update the user with subscription status\n        const result = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].updateOne({\n            _id: userId\n        }, {\n            $set: {\n                is_subscribed: isSubscribed\n            }\n        });\n        return result.modifiedCount > 0;\n    } catch (error) {\n        console.error('Error updating subscription status:', error);\n        throw error;\n    }\n}\n// Check if a user is authenticated, has active trial/subscription and redirect if needed\nasync function requireAuthentication(context) {\n    const session = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_0__.getSession)(context);\n    // If no user is logged in, redirect to login\n    if (!session) {\n        return {\n            redirect: {\n                destination: '/login',\n                permanent: false\n            }\n        };\n    }\n    try {\n        // Connect to the database\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        // Get full user data including trial/subscription info\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOne({\n            email: session.user.email\n        });\n        // If user not found in database but has session\n        if (!user) {\n            // Clear session and redirect to login\n            return {\n                redirect: {\n                    destination: '/login',\n                    permanent: false\n                }\n            };\n        }\n        // Check if subscribed or trial is active\n        const isSubscribed = user.is_subscribed;\n        if (isSubscribed) {\n            // User is subscribed, allow access\n            return {\n                props: {\n                    user: {\n                        ...session.user,\n                        isSubscribed: true,\n                        trialActive: true\n                    }\n                }\n            };\n        }\n        // Check trial status\n        const trialStartDate = user.trial_start_date ? new Date(user.trial_start_date) : null;\n        if (!trialStartDate) {\n            // No trial start date, redirect to upgrade\n            return {\n                redirect: {\n                    destination: '/upgrade',\n                    permanent: false\n                }\n            };\n        }\n        // Calculate trial end date and compare with current date\n        const trialEndDate = new Date(trialStartDate);\n        trialEndDate.setDate(trialEndDate.getDate() + 7);\n        const currentDate = new Date();\n        const trialActive = currentDate < trialEndDate;\n        if (!trialActive) {\n            // Trial has expired, redirect to upgrade page\n            return {\n                redirect: {\n                    destination: '/upgrade',\n                    permanent: false\n                }\n            };\n        }\n        // Calculate days remaining in trial\n        const diffTime = trialEndDate.getTime() - currentDate.getTime();\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        const daysRemaining = Math.max(0, diffDays);\n        // Trial is active, allow access with trial info\n        return {\n            props: {\n                user: {\n                    ...session.user,\n                    isSubscribed: false,\n                    trialActive: true,\n                    trialEndDate: trialEndDate.toISOString(),\n                    daysRemaining\n                }\n            }\n        };\n    } catch (error) {\n        console.error('Error in requireAuthentication:', error);\n        // On error, default to allowing access with warning\n        // This prevents locked-out users in case of database errors\n        return {\n            props: {\n                user: {\n                    ...session.user,\n                    isSubscribed: false,\n                    trialActive: true,\n                    trialStatus: 'unknown',\n                    error: 'Could not verify subscription status'\n                }\n            }\n        };\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/auth.js\n");

/***/ }),

/***/ "(api-node)/./lib/mongodb.js":
/*!************************!*\
  !*** ./lib/mongodb.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\n// Check if we're on the client side\nconst isClient = \"undefined\" !== 'undefined';\n// Only access MONGODB_URI on the server side\nconst MONGODB_URI = !isClient ? process.env.MONGODB_URI : null;\n// Skip validation on client-side\nif (!isClient && !MONGODB_URI) {\n    throw new Error(\"Please define the MONGODB_URI\");\n}\n// Parse username from URI for logging purposes only\ntry {\n    if (MONGODB_URI.includes('@')) {\n        const credentialPart = MONGODB_URI.split('@')[0].split('//')[1];\n        if (credentialPart && credentialPart.includes(':')) {\n            const username = credentialPart.split(':')[0];\n            console.log(`Using MongoDB with username: ${username}`);\n        }\n    }\n} catch (error) {\n// Ignore parsing errors\n}\nlet cached = global.mongoose;\nif (!cached) {\n    cached = global.mongoose = {\n        conn: null,\n        promise: null\n    };\n}\nasync function dbConnect() {\n    if (cached.conn) {\n        console.log(\"Using cached database connection\");\n        return cached.conn;\n    }\n    if (!cached.promise) {\n        const opts = {\n            bufferCommands: false,\n            // Use these options for more reliable connection\n            serverSelectionTimeoutMS: 5000,\n            connectTimeoutMS: 10000\n        };\n        console.log(\"Connecting to MongoDB...\");\n        cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI, opts).then((mongoose)=>{\n            console.log(\"MongoDB connected successfully\");\n            return mongoose;\n        }).catch((error)=>{\n            console.error(\"MongoDB connection error:\", error);\n            // Return a \"mock mongoose\" that won't crash but won't do anything\n            // This allows the app to continue running without a database\n            return createMockMongoose();\n        });\n    }\n    try {\n        cached.conn = await cached.promise;\n        return cached.conn;\n    } catch (e) {\n        console.error(\"Error resolving MongoDB connection:\", e);\n        throw e;\n    }\n}\n// Creates a mock Mongoose that won't crash but won't do anything\n// Used as a fallback when MongoDB connection fails\nfunction createMockMongoose() {\n    console.warn(\"Using mock Mongoose (no database persistence)\");\n    // In-memory storage for collections\n    const collections = {};\n    // Initialize with empty collections\n    const knownCollections = [\n        'users',\n        'deals',\n        'accounts'\n    ];\n    knownCollections.forEach((name)=>{\n        collections[name] = [];\n    });\n    // Try to load from localStorage or global memory\n    if (false) {} else if (typeof global !== 'undefined' && global._localDbStorage) {\n        knownCollections.forEach((name)=>{\n            try {\n                const data = global._localDbStorage[`rehustle_${name}`];\n                if (data) {\n                    collections[name] = JSON.parse(data);\n                    console.log(`Loaded ${collections[name].length} items from server memory for ${name}`);\n                }\n            } catch (e) {\n                console.error(`Error loading ${name} from server memory:`, e);\n            }\n        });\n    }\n    // Save data helper\n    const saveCollection = (name, data)=>{\n        if (false) {} else if (typeof global !== 'undefined') {\n            if (!global._localDbStorage) {\n                global._localDbStorage = {};\n            }\n            global._localDbStorage[`rehustle_${name}`] = JSON.stringify(data);\n        }\n    };\n    // Mock mongoose object with minimum required functionality\n    return {\n        // This is what we return from mongoose.connect()\n        connection: {\n            readyState: 1\n        },\n        models: {},\n        model: (name, schema)=>{\n            if (!collections[name]) {\n                collections[name] = [];\n            }\n            // Return a mock model that works with MongoDB-like queries\n            const model = {\n                findOne: async (query)=>{\n                    console.log(`[MockDB] findOne in ${name}:`, query);\n                    const found = collections[name].find((doc)=>Object.entries(query).every(([key, value])=>doc[key] === value));\n                    return found ? {\n                        ...found\n                    } : null;\n                },\n                find: async (query)=>{\n                    console.log(`[MockDB] find in ${name}:`, query);\n                    return collections[name].filter((doc)=>Object.entries(query).every(([key, value])=>doc[key] === value));\n                },\n                create: async (data)=>{\n                    console.log(`[MockDB] create in ${name}:`, data);\n                    const _id = `mock_${Date.now()}_${Math.random().toString(36).substring(2, 8)}`;\n                    const newDoc = {\n                        ...data,\n                        _id\n                    };\n                    collections[name].push(newDoc);\n                    saveCollection(name, collections[name]);\n                    return {\n                        ...newDoc\n                    };\n                },\n                findByIdAndUpdate: async (id, update, options)=>{\n                    console.log(`[MockDB] findByIdAndUpdate in ${name}:`, id, update);\n                    const index = collections[name].findIndex((doc)=>doc._id === id);\n                    if (index === -1) {\n                        if (options?.upsert) {\n                            const newDoc = {\n                                ...update,\n                                _id: id\n                            };\n                            collections[name].push(newDoc);\n                            saveCollection(name, collections[name]);\n                            return newDoc;\n                        }\n                        return null;\n                    }\n                    // Apply updates\n                    if (update.$set) {\n                        collections[name][index] = {\n                            ...collections[name][index],\n                            ...update.$set\n                        };\n                    } else {\n                        // Direct update\n                        collections[name][index] = {\n                            ...collections[name][index],\n                            ...update\n                        };\n                    }\n                    saveCollection(name, collections[name]);\n                    return {\n                        ...collections[name][index]\n                    };\n                },\n                updateOne: async (filter, update)=>{\n                    console.log(`[MockDB] updateOne in ${name}:`, filter, update);\n                    const index = collections[name].findIndex((doc)=>Object.entries(filter).every(([key, value])=>doc[key] === value));\n                    if (index !== -1) {\n                        if (update.$set) {\n                            collections[name][index] = {\n                                ...collections[name][index],\n                                ...update.$set\n                            };\n                        } else {\n                            collections[name][index] = {\n                                ...collections[name][index],\n                                ...update\n                            };\n                        }\n                        saveCollection(name, collections[name]);\n                        return {\n                            modifiedCount: 1,\n                            acknowledged: true\n                        };\n                    }\n                    return {\n                        modifiedCount: 0,\n                        acknowledged: true\n                    };\n                },\n                deleteOne: async (filter)=>{\n                    console.log(`[MockDB] deleteOne in ${name}:`, filter);\n                    const initialLength = collections[name].length;\n                    collections[name] = collections[name].filter((doc)=>!Object.entries(filter).every(([key, value])=>doc[key] === value));\n                    if (initialLength !== collections[name].length) {\n                        saveCollection(name, collections[name]);\n                    }\n                    return {\n                        deletedCount: initialLength - collections[name].length,\n                        acknowledged: true\n                    };\n                }\n            };\n            // Store in models cache\n            if (!this.models[name]) {\n                this.models[name] = model;\n            }\n            return model;\n        }\n    };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dbConnect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/mongodb.js\n");

/***/ }),

/***/ "(api-node)/./models/User.js":
/*!************************!*\
  !*** ./models/User.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst UserSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    email: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    password: String,\n    name: String,\n    trial_start_date: Date,\n    is_subscribed: {\n        type: Boolean,\n        default: false\n    },\n    lifetime_access: {\n        type: Boolean,\n        default: false\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    lastLogin: {\n        type: Date,\n        default: Date.now\n    }\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"User\", UserSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL21vZGVscy9Vc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnQztBQUVoQyxNQUFNQyxhQUFhLElBQUlELHdEQUFlLENBQUM7SUFDckNHLE9BQU87UUFBRUMsTUFBTUM7UUFBUUMsVUFBVTtRQUFNQyxRQUFRO0lBQUs7SUFDcERDLFVBQVVIO0lBQ1ZJLE1BQU1KO0lBQ05LLGtCQUFrQkM7SUFDbEJDLGVBQWU7UUFBRVIsTUFBTVM7UUFBU0MsU0FBUztJQUFNO0lBQy9DQyxpQkFBaUI7UUFBRVgsTUFBTVM7UUFBU0MsU0FBUztJQUFNO0lBQ2pERSxXQUFXO1FBQUVaLE1BQU1PO1FBQU1HLFNBQVNILEtBQUtNLEdBQUc7SUFBQztJQUMzQ0MsV0FBVztRQUFFZCxNQUFNTztRQUFNRyxTQUFTSCxLQUFLTSxHQUFHO0lBQUM7QUFDN0M7QUFFQSxpRUFBZWpCLHdEQUFlLENBQUNvQixJQUFJLElBQUlwQixxREFBYyxDQUFDLFFBQVFDLFdBQVdBLEVBQUMiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvbW9kZWxzL1VzZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xuXG5jb25zdCBVc2VyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIGVtYWlsOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUsIHVuaXF1ZTogdHJ1ZSB9LFxuICBwYXNzd29yZDogU3RyaW5nLFxuICBuYW1lOiBTdHJpbmcsXG4gIHRyaWFsX3N0YXJ0X2RhdGU6IERhdGUsXG4gIGlzX3N1YnNjcmliZWQ6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogZmFsc2UgfSxcbiAgbGlmZXRpbWVfYWNjZXNzOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IGZhbHNlIH0sXG4gIGNyZWF0ZWRBdDogeyB0eXBlOiBEYXRlLCBkZWZhdWx0OiBEYXRlLm5vdyB9LFxuICBsYXN0TG9naW46IHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVscy5Vc2VyIHx8IG1vbmdvb3NlLm1vZGVsKFwiVXNlclwiLCBVc2VyU2NoZW1hKTsiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJVc2VyU2NoZW1hIiwiU2NoZW1hIiwiZW1haWwiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ1bmlxdWUiLCJwYXNzd29yZCIsIm5hbWUiLCJ0cmlhbF9zdGFydF9kYXRlIiwiRGF0ZSIsImlzX3N1YnNjcmliZWQiLCJCb29sZWFuIiwiZGVmYXVsdCIsImxpZmV0aW1lX2FjY2VzcyIsImNyZWF0ZWRBdCIsIm5vdyIsImxhc3RMb2dpbiIsIm1vZGVscyIsIlVzZXIiLCJtb2RlbCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./models/User.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/auth/[...nextauth].js */ \"(api-node)/./pages/api/auth/[...nextauth].js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/auth/[...nextauth]\",\n        pathname: \"/api/auth/[...nextauth]\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGYXV0aCUyRiU1Qi4uLm5leHRhdXRoJTVEJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZhdXRoJTJGJTVCLi4ubmV4dGF1dGglNUQuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDOEQ7QUFDOUQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHdEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyx3REFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0uanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2F1dGgvWy4uLm5leHRhdXRoXVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2F1dGgvWy4uLm5leHRhdXRoXVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/auth/[...nextauth].js":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/mongodb */ \"(api-node)/./lib/mongodb.js\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../models/User */ \"(api-node)/./models/User.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../lib/auth */ \"(api-node)/./lib/auth.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([bcryptjs__WEBPACK_IMPORTED_MODULE_4__, _lib_auth__WEBPACK_IMPORTED_MODULE_5__]);\n([bcryptjs__WEBPACK_IMPORTED_MODULE_4__, _lib_auth__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n// Using Next.js with Mongoose for MongoDB connectivity\n// This avoids the 'dns' module error that occurs with the MongoDB adapter\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (next_auth__WEBPACK_IMPORTED_MODULE_0___default()({\n    providers: [\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default()({\n            name: \"Credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"text\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials) {\n                    console.error('No credentials provided');\n                    return null;\n                }\n                const { email, password } = credentials;\n                if (!email || !password) {\n                    console.error('Missing email or password');\n                    return null;\n                }\n                try {\n                    console.log(`Attempting to authorize: ${email}`);\n                    // Connect to the database\n                    await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n                    // Try to create test user if they don't exist\n                    if (email === 'test@example.com' && password === 'password123') {\n                        try {\n                            const existingUser = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOne({\n                                email\n                            });\n                            if (!existingUser) {\n                                console.log('Creating test user since it does not exist');\n                                // Create a new test user\n                                const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].hash(password, 12);\n                                const newUser = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].create({\n                                    email: 'test@example.com',\n                                    password: hashedPassword,\n                                    name: 'Test User',\n                                    trial_start_date: new Date(),\n                                    is_subscribed: false\n                                });\n                                console.log(`Test user created with ID: ${newUser._id}`);\n                                // Return the newly created test user\n                                return {\n                                    id: newUser._id.toString(),\n                                    email: newUser.email,\n                                    name: newUser.name,\n                                    userId: newUser._id.toString()\n                                };\n                            }\n                        } catch (e) {\n                            console.error('Error checking/creating test user:', e);\n                        }\n                    }\n                    // Find user in the database\n                    const user = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOne({\n                        email\n                    });\n                    if (!user) {\n                        console.log(`No user found with email: ${email}`);\n                        return null;\n                    }\n                    console.log(`User found: ${user.email}, ID: ${user._id}, verifying password`);\n                    // Special case for unencrypted test user password\n                    if (password === 'password123' && email === 'test@example.com' && user.password === 'password123') {\n                        console.log('Using special case for test user password');\n                        return {\n                            id: user._id.toString(),\n                            email: user.email,\n                            name: user.name || '',\n                            userId: user._id.toString()\n                        };\n                    }\n                    // Verify the password\n                    const isValid = await (0,bcryptjs__WEBPACK_IMPORTED_MODULE_4__.compare)(password, user.password);\n                    if (!isValid) {\n                        console.log('Invalid password');\n                        return null;\n                    }\n                    console.log('Password verified successfully');\n                    // Return a user object excluding the password\n                    return {\n                        id: user._id.toString(),\n                        email: user.email,\n                        name: user.name || '',\n                        userId: user._id.toString()\n                    };\n                } catch (error) {\n                    console.error('Error in authorize:', error);\n                    // Don't throw, return null instead to show the error on the login form\n                    return null;\n                }\n            }\n        })\n    ],\n    session: {\n        strategy: \"jwt\"\n    },\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n                token.userId = user.id; // Ensure userId is in the token\n                token.name = user.name;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (token) {\n                session.user.id = token.id;\n                session.user.userId = token.id; // Add userId to session for consistency\n                if (token.name) {\n                    session.user.name = token.name;\n                }\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/login\",\n        error: \"/login\",\n        newUser: \"/dashboard\"\n    },\n    secret: process.env.NEXTAUTH_SECRET || \"a-strong-secret-for-development-only\",\n    debug: \"development\" === 'development'\n}));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/auth/[...nextauth].js\n");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = import("bcryptjs");;

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next-auth/react":
/*!**********************************!*\
  !*** external "next-auth/react" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("next-auth/react");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();