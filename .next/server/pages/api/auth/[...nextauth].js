"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/[...nextauth]";
exports.ids = ["pages/api/auth/[...nextauth]"];
exports.modules = {

/***/ "(api-node)/./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUser: () => (/* binding */ createUser),\n/* harmony export */   getTrialStatus: () => (/* binding */ getTrialStatus),\n/* harmony export */   getUserByEmail: () => (/* binding */ getUserByEmail),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   isAuthenticated: () => (/* binding */ isAuthenticated),\n/* harmony export */   isTrialActive: () => (/* binding */ isTrialActive),\n/* harmony export */   requireAuthentication: () => (/* binding */ requireAuthentication),\n/* harmony export */   updateSubscriptionStatus: () => (/* binding */ updateSubscriptionStatus),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword)\n/* harmony export */ });\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/react */ \"next-auth/react\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var _mongodb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mongodb */ \"(api-node)/./lib/mongodb.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([bcryptjs__WEBPACK_IMPORTED_MODULE_1__]);\nbcryptjs__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nasync function hashPassword(password) {\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].hash(password, 12);\n}\nasync function verifyPassword(password, hashedPassword) {\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].compare(password, hashedPassword);\n}\n// Get user from MongoDB using their email\nasync function getUserByEmail(email) {\n    try {\n        if (!email) {\n            console.error('getUserByEmail called with empty email');\n            return null;\n        }\n        console.log(`Looking up user with email: ${email}`);\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)();\n        const user = await db.collection('users').findOne({\n            email\n        });\n        if (user) {\n            console.log(`Found user with email ${email}, ID: ${user._id}`);\n        } else {\n            console.log(`No user found with email: ${email}`);\n        }\n        return user;\n    } catch (error) {\n        console.error('Error in getUserByEmail:', error);\n        throw new Error(`Database error when fetching user: ${error.message}`);\n    }\n}\n// Create a new user in MongoDB\nasync function createUser(userData) {\n    try {\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)();\n        const { email, password, name, trial_start_date, is_subscribed } = userData;\n        console.log(`Hashing password for new user: ${email}`);\n        const hashedPassword = await hashPassword(password);\n        // Format trial start date properly\n        const trialStartDate = trial_start_date ? new Date(trial_start_date) : new Date();\n        // Create a full user record\n        const userDoc = {\n            email,\n            password: hashedPassword,\n            name: name || email.split('@')[0],\n            trial_start_date: trialStartDate,\n            is_subscribed: is_subscribed || false,\n            createdAt: new Date(),\n            lastLogin: new Date()\n        };\n        console.log(`Inserting new user into database: ${email}`);\n        const result = await db.collection('users').insertOne(userDoc);\n        console.log(`User inserted successfully, ID: ${result.insertedId}`);\n        // Return user object with ID for session creation\n        return {\n            id: result.insertedId.toString(),\n            _id: result.insertedId,\n            email,\n            name: userDoc.name,\n            trial_start_date: trialStartDate,\n            is_subscribed: userDoc.is_subscribed\n        };\n    } catch (error) {\n        console.error('Error in createUser:', error);\n        throw new Error(`Database error when creating user: ${error.message}`);\n    }\n}\n// Check if a user is authenticated for API routes\nasync function isAuthenticated(req, res) {\n    const session = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_0__.getSession)({\n        req\n    });\n    if (!session) {\n        res.status(401).json({\n            error: 'Not authenticated'\n        });\n        return false;\n    }\n    return session;\n}\n// Check if trial is active for a user\nasync function isTrialActive(userId) {\n    try {\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)();\n        // Get the user with the given id\n        const user = await db.collection('users').findOne({\n            _id: userId\n        });\n        if (!user) {\n            return false;\n        }\n        // If user is subscribed, trial status doesn't matter\n        if (user.is_subscribed) {\n            return true;\n        }\n        // Check if the trial has expired (7 days from start)\n        const trialStartDate = user.trial_start_date ? new Date(user.trial_start_date) : null;\n        if (!trialStartDate) {\n            return false; // No trial start date found\n        }\n        // Calculate trial end date (7 days after start)\n        const trialEndDate = new Date(trialStartDate);\n        trialEndDate.setDate(trialEndDate.getDate() + 7);\n        // Check if current date is before trial end date\n        const currentDate = new Date();\n        return currentDate < trialEndDate;\n    } catch (error) {\n        console.error('Error checking trial status:', error);\n        return false; // Default to trial expired on error\n    }\n}\n// Get trial status information for a user\nasync function getTrialStatus(userId) {\n    try {\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)();\n        // Get the user with the given id\n        const user = await db.collection('users').findOne({\n            _id: userId\n        });\n        if (!user) {\n            throw new Error('User not found');\n        }\n        // If user is already subscribed\n        if (user.is_subscribed) {\n            return {\n                isActive: true,\n                isSubscribed: true,\n                trialStartDate: user.trial_start_date,\n                trialEndDate: null,\n                daysRemaining: 0,\n                message: 'Subscribed account'\n            };\n        }\n        // Calculate trial information\n        const trialStartDate = user.trial_start_date ? new Date(user.trial_start_date) : new Date();\n        const trialEndDate = new Date(trialStartDate);\n        trialEndDate.setDate(trialEndDate.getDate() + 7);\n        const currentDate = new Date();\n        const isActive = currentDate < trialEndDate;\n        // Calculate days remaining\n        const diffTime = trialEndDate.getTime() - currentDate.getTime();\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        const daysRemaining = Math.max(0, diffDays);\n        // Return trial status\n        return {\n            isActive,\n            isSubscribed: false,\n            trialStartDate,\n            trialEndDate,\n            daysRemaining,\n            message: isActive ? `Trial active - ${daysRemaining} days remaining` : 'Trial has expired'\n        };\n    } catch (error) {\n        console.error('Error getting trial status:', error);\n        throw error;\n    }\n}\n// Update subscription status\nasync function updateSubscriptionStatus(userId, isSubscribed) {\n    try {\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)();\n        // Update the user with subscription status\n        const result = await db.collection('users').updateOne({\n            _id: userId\n        }, {\n            $set: {\n                is_subscribed: isSubscribed\n            }\n        });\n        return result.modifiedCount > 0;\n    } catch (error) {\n        console.error('Error updating subscription status:', error);\n        throw error;\n    }\n}\n// Check if a user is authenticated, has active trial/subscription and redirect if needed\nasync function requireAuthentication(context) {\n    const session = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_0__.getSession)(context);\n    // If no user is logged in, redirect to login\n    if (!session) {\n        return {\n            redirect: {\n                destination: '/login',\n                permanent: false\n            }\n        };\n    }\n    try {\n        // Get full user data including trial/subscription info\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)();\n        const user = await db.collection('users').findOne({\n            email: session.user.email\n        });\n        // If user not found in database but has session\n        if (!user) {\n            // Clear session and redirect to login\n            return {\n                redirect: {\n                    destination: '/login',\n                    permanent: false\n                }\n            };\n        }\n        // Check if subscribed or trial is active\n        const isSubscribed = user.is_subscribed;\n        if (isSubscribed) {\n            // User is subscribed, allow access\n            return {\n                props: {\n                    user: {\n                        ...session.user,\n                        isSubscribed: true,\n                        trialActive: true\n                    }\n                }\n            };\n        }\n        // Check trial status\n        const trialStartDate = user.trial_start_date ? new Date(user.trial_start_date) : null;\n        if (!trialStartDate) {\n            // No trial start date, redirect to upgrade\n            return {\n                redirect: {\n                    destination: '/upgrade',\n                    permanent: false\n                }\n            };\n        }\n        // Calculate trial end date and compare with current date\n        const trialEndDate = new Date(trialStartDate);\n        trialEndDate.setDate(trialEndDate.getDate() + 7);\n        const currentDate = new Date();\n        const trialActive = currentDate < trialEndDate;\n        if (!trialActive) {\n            // Trial has expired, redirect to upgrade page\n            return {\n                redirect: {\n                    destination: '/upgrade',\n                    permanent: false\n                }\n            };\n        }\n        // Calculate days remaining in trial\n        const diffTime = trialEndDate.getTime() - currentDate.getTime();\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        const daysRemaining = Math.max(0, diffDays);\n        // Trial is active, allow access with trial info\n        return {\n            props: {\n                user: {\n                    ...session.user,\n                    isSubscribed: false,\n                    trialActive: true,\n                    trialEndDate: trialEndDate.toISOString(),\n                    daysRemaining\n                }\n            }\n        };\n    } catch (error) {\n        console.error('Error in requireAuthentication:', error);\n        // On error, default to allowing access with warning\n        // This prevents locked-out users in case of database errors\n        return {\n            props: {\n                user: {\n                    ...session.user,\n                    isSubscribed: false,\n                    trialActive: true,\n                    trialStatus: 'unknown',\n                    error: 'Could not verify subscription status'\n                }\n            }\n        };\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/auth.js\n");

/***/ }),

/***/ "(api-node)/./lib/mongodb.js":
/*!************************!*\
  !*** ./lib/mongodb.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DB_NAME: () => (/* binding */ DB_NAME),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getDatabase: () => (/* binding */ getDatabase)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n\n// Database Name - change this if you want to use a different database\nconst DB_NAME = 'rehustle';\n// MongoDB connection config with several fallback options\n// This helps avoid SSL certificate issues and connection problems\nfunction getMongoConfig() {\n    // Main connection URI from env\n    const uri = process.env.MONGODB_URI;\n    if (!uri) {\n        console.error('MONGODB_URI not provided');\n        return {\n            uri: null,\n            options: {}\n        };\n    }\n    // Parse username and password from URI for diagnostics only\n    try {\n        // Extract credentials for logging (avoid logging actual credentials)\n        if (uri.includes('@')) {\n            const credentialPart = uri.split('@')[0].split('//')[1];\n            if (credentialPart && credentialPart.includes(':')) {\n                const username = credentialPart.split(':')[0];\n                console.log(`Using MongoDB with username: ${username}`);\n            }\n        }\n    } catch (error) {\n    // Ignore parsing errors\n    }\n    // For URI that uses SRV records\n    const isSrv = uri.includes('+srv');\n    // Start with most compatible options\n    const baseOptions = {\n        connectTimeoutMS: 30000,\n        serverSelectionTimeoutMS: 30000,\n        useNewUrlParser: true,\n        useUnifiedTopology: true\n    };\n    // Direct connection can sometimes bypass SSL issues\n    if (isSrv) {\n        console.log('Using MongoDB+SRV connection');\n        // Try to simplify the connection URI\n        let parsedUri = uri;\n        try {\n            // Strip query parameters and add back only essential ones\n            if (uri.includes('?')) {\n                parsedUri = uri.split('?')[0] + '?retryWrites=true&w=majority';\n                console.log('Simplified MongoDB connection string');\n            }\n        } catch (e) {\n            // Use original if parsing fails\n            console.error('Error parsing MongoDB URI:', e);\n            parsedUri = uri;\n        }\n        return {\n            uri: parsedUri,\n            options: {\n                ...baseOptions,\n                directConnection: false\n            }\n        };\n    } else {\n        // Standard connection\n        console.log('Using standard MongoDB connection');\n        return {\n            uri,\n            options: baseOptions\n        };\n    }\n}\n// Get connection configuration\nconst { uri, options } = getMongoConfig();\n// Check if MongoDB URI is configured\nif (!process.env.MONGODB_URI) {\n    throw new Error(\"Please define the MONGODB_URI environment variable.\");\n}\n// Global variables to cache the MongoDB connection promise\nlet client;\nlet clientPromise;\n// Create a connected client or a dummy client that fails gracefully\nasync function createClient() {\n    if (!uri) {\n        console.error(\"MongoDB URI is not provided\");\n        return null;\n    }\n    try {\n        const mongoClient = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri, options);\n        // Connect with timeout\n        const connectPromise = mongoClient.connect();\n        // Return the connected client or null if connection fails\n        return await connectPromise;\n    } catch (error) {\n        console.error(\"Failed to create MongoDB client:\", error);\n        return null;\n    }\n}\n// Setup the global promise for the MongoDB client\nif (true) {\n    // In development mode, use a global variable so that the value\n    // is preserved across module reloads caused by HMR (Hot Module Replacement).\n    if (!global._mongoClientPromise) {\n        global._mongoClientPromise = createClient().catch((err)=>{\n            console.error(\"Failed to connect to MongoDB:\", err);\n            return null;\n        });\n    }\n    clientPromise = global._mongoClientPromise;\n} else {}\n/**\n * Helper function to get the MongoDB database\n * Includes fallback to in-memory storage if MongoDB is unavailable\n * @returns {Promise<Db>} MongoDB database or fallback object\n */ async function getDatabase() {\n    try {\n        // Await the client with a timeout\n        const client = await Promise.race([\n            clientPromise,\n            new Promise((_, reject)=>setTimeout(()=>reject(new Error('MongoDB connection timeout')), 5000))\n        ]);\n        // If client is null (connection failed), throw error to use fallback\n        if (!client) {\n            throw new Error(\"MongoDB client is null\");\n        }\n        // Return the database \n        return client.db(DB_NAME);\n    } catch (error) {\n        console.error(\"Error getting MongoDB database:\", error.message);\n        // Create a localStorage-backed fallback\n        return createLocalStorageFallbackDb();\n    }\n}\n/**\n * Creates an in-memory fallback database that uses localStorage when available\n * This allows the application to function without MongoDB\n * @returns {Object} Object that mimics MongoDB database API\n */ function createLocalStorageFallbackDb() {\n    // Use an in-memory store as fallback\n    console.warn(\"Using in-memory/localStorage fallback for database\");\n    // Collection data will be stored here in memory\n    const collections = {};\n    // Try to load existing data from localStorage\n    try {\n        if (false) {}\n    } catch (e) {\n        console.error(\"Error accessing localStorage:\", e);\n    }\n    // Helper to save a collection to localStorage\n    const saveCollection = (name, data)=>{\n        try {\n            if (false) {}\n        } catch (e) {\n            console.error(`Failed to save ${name} to localStorage:`, e);\n        }\n    };\n    // Return a MongoDB-like interface\n    return {\n        collection: (name)=>{\n            // Initialize collection if it doesn't exist\n            if (!collections[name]) {\n                collections[name] = [];\n            }\n            // Return a MongoDB-like collection interface\n            return {\n                findOne: async (query = {})=>{\n                    console.log(`[LocalDB] findOne in ${name}:`, query);\n                    const items = collections[name] || [];\n                    // Simple query matching\n                    if (query._id) {\n                        return items.find((item)=>item._id === query._id) || null;\n                    }\n                    // Match first item that has all query properties\n                    return items.find((item)=>{\n                        return Object.entries(query).every(([key, value])=>item[key] === value);\n                    }) || null;\n                },\n                find: (query = {})=>{\n                    console.log(`[LocalDB] find in ${name}:`, query);\n                    const items = collections[name] || [];\n                    // Filter items by query\n                    let results = items;\n                    if (Object.keys(query).length > 0) {\n                        results = items.filter((item)=>{\n                            return Object.entries(query).every(([key, value])=>item[key] === value);\n                        });\n                    }\n                    // Return a cursor-like object\n                    return {\n                        sort: (sortSpec)=>{\n                            // Simple sorting by a single field\n                            if (sortSpec && Object.keys(sortSpec).length > 0) {\n                                const [field, order] = Object.entries(sortSpec)[0];\n                                results.sort((a, b)=>{\n                                    if (a[field] < b[field]) return order === 1 ? -1 : 1;\n                                    if (a[field] > b[field]) return order === 1 ? 1 : -1;\n                                    return 0;\n                                });\n                            }\n                            return {\n                                toArray: async ()=>results\n                            };\n                        },\n                        toArray: async ()=>results\n                    };\n                },\n                insertOne: async (doc)=>{\n                    console.log(`[LocalDB] insertOne in ${name}:`, doc);\n                    // Generate an ID if none provided\n                    const newDoc = {\n                        ...doc,\n                        _id: doc._id || `local_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`\n                    };\n                    collections[name].push(newDoc);\n                    saveCollection(name, collections[name]);\n                    return {\n                        insertedId: newDoc._id,\n                        acknowledged: true\n                    };\n                },\n                deleteOne: async (filter)=>{\n                    console.log(`[LocalDB] deleteOne in ${name}:`, filter);\n                    const items = collections[name];\n                    const initialLength = items.length;\n                    // Remove the first matching item\n                    const index = items.findIndex((item)=>{\n                        return Object.entries(filter).every(([key, value])=>item[key] === value);\n                    });\n                    if (index !== -1) {\n                        items.splice(index, 1);\n                        saveCollection(name, items);\n                    }\n                    return {\n                        deletedCount: initialLength - items.length,\n                        acknowledged: true\n                    };\n                },\n                updateOne: async (filter, update)=>{\n                    console.log(`[LocalDB] updateOne in ${name}:`, filter, update);\n                    const items = collections[name];\n                    // Find the item to update\n                    const index = items.findIndex((item)=>{\n                        return Object.entries(filter).every(([key, value])=>item[key] === value);\n                    });\n                    if (index !== -1) {\n                        // Apply $set updates\n                        if (update.$set) {\n                            items[index] = {\n                                ...items[index],\n                                ...update.$set\n                            };\n                        }\n                        saveCollection(name, items);\n                        return {\n                            modifiedCount: 1,\n                            acknowledged: true\n                        };\n                    }\n                    return {\n                        modifiedCount: 0,\n                        acknowledged: true\n                    };\n                },\n                findOneAndUpdate: async (filter, update, options = {})=>{\n                    console.log(`[LocalDB] findOneAndUpdate in ${name}:`, filter, update, options);\n                    const items = collections[name];\n                    // Find the item to update\n                    const index = items.findIndex((item)=>{\n                        return Object.entries(filter).every(([key, value])=>item[key] === value);\n                    });\n                    let returnValue = null;\n                    if (index !== -1) {\n                        // Store the original value if returning before update\n                        if (!options.returnDocument || options.returnDocument === 'before') {\n                            returnValue = {\n                                ...items[index]\n                            };\n                        }\n                        // Apply $set updates\n                        if (update.$set) {\n                            items[index] = {\n                                ...items[index],\n                                ...update.$set\n                            };\n                        }\n                        // Store the updated value if returning after update\n                        if (options.returnDocument === 'after') {\n                            returnValue = {\n                                ...items[index]\n                            };\n                        }\n                        saveCollection(name, items);\n                    } else if (options.upsert) {\n                        // Create a new document if upsert is true\n                        const newDoc = {\n                            ...filter,\n                            ...update.$set,\n                            _id: `local_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`\n                        };\n                        items.push(newDoc);\n                        if (options.returnDocument === 'after') {\n                            returnValue = {\n                                ...newDoc\n                            };\n                        }\n                        saveCollection(name, items);\n                    }\n                    return {\n                        value: returnValue,\n                        ok: 1\n                    };\n                }\n            };\n        },\n        listCollections: ()=>({\n                toArray: async ()=>Object.keys(collections).map((name)=>({\n                            name\n                        }))\n            }),\n        command: async (cmd)=>{\n            // Simple support for ping command\n            if (cmd.ping) {\n                return {\n                    ok: 0\n                }; // Return 0 to indicate it's not a real MongoDB\n            }\n            return {\n                ok: 0\n            };\n        },\n        // Add a special method to indicate this is the fallback\n        isFallback: true\n    };\n}\n// Export clientPromise\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientPromise);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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NEJBQ3RDRCxjQUFjO2dDQUFFLEdBQUcxQyxLQUFLLENBQUNpQyxNQUFNOzRCQUFDO3dCQUNsQzt3QkFFQXhDLGVBQWVDLE1BQU1NO29CQUN2QixPQUFPLElBQUlyRCxRQUFRaUcsTUFBTSxFQUFFO3dCQUN6QiwwQ0FBMEM7d0JBQzFDLE1BQU12QixTQUFTOzRCQUNiLEdBQUdWLE1BQU07NEJBQ1QsR0FBRzJCLE9BQU9DLElBQUk7NEJBQ2R0QyxLQUFLLENBQUMsTUFBTSxFQUFFcUIsS0FBS0MsR0FBRyxHQUFHLENBQUMsRUFBRUMsS0FBS0MsTUFBTSxHQUFHQyxRQUFRLENBQUMsSUFBSUMsU0FBUyxDQUFDLEdBQUcsSUFBSTt3QkFDMUU7d0JBRUEzQixNQUFNNEIsSUFBSSxDQUFDUDt3QkFFWCxJQUFJMUUsUUFBUWdHLGNBQWMsS0FBSyxTQUFTOzRCQUN0Q0QsY0FBYztnQ0FBRSxHQUFHckIsTUFBTTs0QkFBQzt3QkFDNUI7d0JBRUE1QixlQUFlQyxNQUFNTTtvQkFDdkI7b0JBRUEsT0FBTzt3QkFDTFEsT0FBT2tDO3dCQUNQRyxJQUFJO29CQUNOO2dCQUNGO1lBQ0Y7UUFDRjtRQUVBQyxpQkFBaUIsSUFBTztnQkFDdEI1QixTQUFTLFVBQVlkLE9BQU9NLElBQUksQ0FBQzNCLGFBQWFnRSxHQUFHLENBQUNyRCxDQUFBQSxPQUFTOzRCQUFFQTt3QkFBSztZQUNwRTtRQUVBc0QsU0FBUyxPQUFPQztZQUNkLGtDQUFrQztZQUNsQyxJQUFJQSxJQUFJQyxJQUFJLEVBQUU7Z0JBQ1osT0FBTztvQkFBRUwsSUFBSTtnQkFBRSxHQUFHLCtDQUErQztZQUNuRTtZQUNBLE9BQU87Z0JBQUVBLElBQUk7WUFBRTtRQUNqQjtRQUVBLHdEQUF3RDtRQUN4RE0sWUFBWTtJQUNkO0FBQ0Y7QUFFQSx1QkFBdUI7QUFDdkIsaUVBQWV2RixhQUFhQSxFQUFDIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL2xpYi9tb25nb2RiLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vbmdvQ2xpZW50IH0gZnJvbSBcIm1vbmdvZGJcIjtcblxuLy8gRGF0YWJhc2UgTmFtZSAtIGNoYW5nZSB0aGlzIGlmIHlvdSB3YW50IHRvIHVzZSBhIGRpZmZlcmVudCBkYXRhYmFzZVxuZXhwb3J0IGNvbnN0IERCX05BTUUgPSAncmVodXN0bGUnO1xuXG4vLyBNb25nb0RCIGNvbm5lY3Rpb24gY29uZmlnIHdpdGggc2V2ZXJhbCBmYWxsYmFjayBvcHRpb25zXG4vLyBUaGlzIGhlbHBzIGF2b2lkIFNTTCBjZXJ0aWZpY2F0ZSBpc3N1ZXMgYW5kIGNvbm5lY3Rpb24gcHJvYmxlbXNcbmZ1bmN0aW9uIGdldE1vbmdvQ29uZmlnKCkge1xuICAvLyBNYWluIGNvbm5lY3Rpb24gVVJJIGZyb20gZW52XG4gIGNvbnN0IHVyaSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJO1xuICBcbiAgaWYgKCF1cmkpIHtcbiAgICBjb25zb2xlLmVycm9yKCdNT05HT0RCX1VSSSBub3QgcHJvdmlkZWQnKTtcbiAgICByZXR1cm4geyB1cmk6IG51bGwsIG9wdGlvbnM6IHt9IH07XG4gIH1cbiAgXG4gIC8vIFBhcnNlIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBmcm9tIFVSSSBmb3IgZGlhZ25vc3RpY3Mgb25seVxuICB0cnkge1xuICAgIC8vIEV4dHJhY3QgY3JlZGVudGlhbHMgZm9yIGxvZ2dpbmcgKGF2b2lkIGxvZ2dpbmcgYWN0dWFsIGNyZWRlbnRpYWxzKVxuICAgIGlmICh1cmkuaW5jbHVkZXMoJ0AnKSkge1xuICAgICAgY29uc3QgY3JlZGVudGlhbFBhcnQgPSB1cmkuc3BsaXQoJ0AnKVswXS5zcGxpdCgnLy8nKVsxXTtcbiAgICAgIGlmIChjcmVkZW50aWFsUGFydCAmJiBjcmVkZW50aWFsUGFydC5pbmNsdWRlcygnOicpKSB7XG4gICAgICAgIGNvbnN0IHVzZXJuYW1lID0gY3JlZGVudGlhbFBhcnQuc3BsaXQoJzonKVswXTtcbiAgICAgICAgY29uc29sZS5sb2coYFVzaW5nIE1vbmdvREIgd2l0aCB1c2VybmFtZTogJHt1c2VybmFtZX1gKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgLy8gSWdub3JlIHBhcnNpbmcgZXJyb3JzXG4gIH1cbiAgXG4gIC8vIEZvciBVUkkgdGhhdCB1c2VzIFNSViByZWNvcmRzXG4gIGNvbnN0IGlzU3J2ID0gdXJpLmluY2x1ZGVzKCcrc3J2Jyk7XG4gIFxuICAvLyBTdGFydCB3aXRoIG1vc3QgY29tcGF0aWJsZSBvcHRpb25zXG4gIGNvbnN0IGJhc2VPcHRpb25zID0ge1xuICAgIGNvbm5lY3RUaW1lb3V0TVM6IDMwMDAwLFxuICAgIHNlcnZlclNlbGVjdGlvblRpbWVvdXRNUzogMzAwMDAsXG4gICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLCBcbiAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWVcbiAgfTtcbiAgXG4gIC8vIERpcmVjdCBjb25uZWN0aW9uIGNhbiBzb21ldGltZXMgYnlwYXNzIFNTTCBpc3N1ZXNcbiAgaWYgKGlzU3J2KSB7XG4gICAgY29uc29sZS5sb2coJ1VzaW5nIE1vbmdvREIrU1JWIGNvbm5lY3Rpb24nKTtcbiAgICBcbiAgICAvLyBUcnkgdG8gc2ltcGxpZnkgdGhlIGNvbm5lY3Rpb24gVVJJXG4gICAgbGV0IHBhcnNlZFVyaSA9IHVyaTtcbiAgICB0cnkge1xuICAgICAgLy8gU3RyaXAgcXVlcnkgcGFyYW1ldGVycyBhbmQgYWRkIGJhY2sgb25seSBlc3NlbnRpYWwgb25lc1xuICAgICAgaWYgKHVyaS5pbmNsdWRlcygnPycpKSB7XG4gICAgICAgIHBhcnNlZFVyaSA9IHVyaS5zcGxpdCgnPycpWzBdICsgJz9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHknO1xuICAgICAgICBjb25zb2xlLmxvZygnU2ltcGxpZmllZCBNb25nb0RCIGNvbm5lY3Rpb24gc3RyaW5nJyk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgLy8gVXNlIG9yaWdpbmFsIGlmIHBhcnNpbmcgZmFpbHNcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHBhcnNpbmcgTW9uZ29EQiBVUkk6JywgZSk7XG4gICAgICBwYXJzZWRVcmkgPSB1cmk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB7XG4gICAgICB1cmk6IHBhcnNlZFVyaSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgLi4uYmFzZU9wdGlvbnMsXG4gICAgICAgIGRpcmVjdENvbm5lY3Rpb246IGZhbHNlXG4gICAgICB9XG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICAvLyBTdGFuZGFyZCBjb25uZWN0aW9uXG4gICAgY29uc29sZS5sb2coJ1VzaW5nIHN0YW5kYXJkIE1vbmdvREIgY29ubmVjdGlvbicpO1xuICAgIHJldHVybiB7XG4gICAgICB1cmksXG4gICAgICBvcHRpb25zOiBiYXNlT3B0aW9uc1xuICAgIH07XG4gIH1cbn1cblxuLy8gR2V0IGNvbm5lY3Rpb24gY29uZmlndXJhdGlvblxuY29uc3QgeyB1cmksIG9wdGlvbnMgfSA9IGdldE1vbmdvQ29uZmlnKCk7XG5cbi8vIENoZWNrIGlmIE1vbmdvREIgVVJJIGlzIGNvbmZpZ3VyZWRcbmlmICghcHJvY2Vzcy5lbnYuTU9OR09EQl9VUkkpIHtcbiAgdGhyb3cgbmV3IEVycm9yKFwiUGxlYXNlIGRlZmluZSB0aGUgTU9OR09EQl9VUkkgZW52aXJvbm1lbnQgdmFyaWFibGUuXCIpO1xufVxuXG4vLyBHbG9iYWwgdmFyaWFibGVzIHRvIGNhY2hlIHRoZSBNb25nb0RCIGNvbm5lY3Rpb24gcHJvbWlzZVxubGV0IGNsaWVudDtcbmxldCBjbGllbnRQcm9taXNlO1xuXG4vLyBDcmVhdGUgYSBjb25uZWN0ZWQgY2xpZW50IG9yIGEgZHVtbXkgY2xpZW50IHRoYXQgZmFpbHMgZ3JhY2VmdWxseVxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ2xpZW50KCkge1xuICBpZiAoIXVyaSkge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJNb25nb0RCIFVSSSBpcyBub3QgcHJvdmlkZWRcIik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgXG4gIHRyeSB7XG4gICAgY29uc3QgbW9uZ29DbGllbnQgPSBuZXcgTW9uZ29DbGllbnQodXJpLCBvcHRpb25zKTtcbiAgICAvLyBDb25uZWN0IHdpdGggdGltZW91dFxuICAgIGNvbnN0IGNvbm5lY3RQcm9taXNlID0gbW9uZ29DbGllbnQuY29ubmVjdCgpO1xuICAgIFxuICAgIC8vIFJldHVybiB0aGUgY29ubmVjdGVkIGNsaWVudCBvciBudWxsIGlmIGNvbm5lY3Rpb24gZmFpbHNcbiAgICByZXR1cm4gYXdhaXQgY29ubmVjdFByb21pc2U7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBjcmVhdGUgTW9uZ29EQiBjbGllbnQ6XCIsIGVycm9yKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG4vLyBTZXR1cCB0aGUgZ2xvYmFsIHByb21pc2UgZm9yIHRoZSBNb25nb0RCIGNsaWVudFxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcImRldmVsb3BtZW50XCIpIHtcbiAgLy8gSW4gZGV2ZWxvcG1lbnQgbW9kZSwgdXNlIGEgZ2xvYmFsIHZhcmlhYmxlIHNvIHRoYXQgdGhlIHZhbHVlXG4gIC8vIGlzIHByZXNlcnZlZCBhY3Jvc3MgbW9kdWxlIHJlbG9hZHMgY2F1c2VkIGJ5IEhNUiAoSG90IE1vZHVsZSBSZXBsYWNlbWVudCkuXG4gIGlmICghZ2xvYmFsLl9tb25nb0NsaWVudFByb21pc2UpIHtcbiAgICBnbG9iYWwuX21vbmdvQ2xpZW50UHJvbWlzZSA9IGNyZWF0ZUNsaWVudCgpLmNhdGNoKGVyciA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGNvbm5lY3QgdG8gTW9uZ29EQjpcIiwgZXJyKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0pO1xuICB9XG4gIGNsaWVudFByb21pc2UgPSBnbG9iYWwuX21vbmdvQ2xpZW50UHJvbWlzZTtcbn0gZWxzZSB7XG4gIC8vIEluIHByb2R1Y3Rpb24gbW9kZSwgaXQncyBiZXN0IHRvIG5vdCB1c2UgYSBnbG9iYWwgdmFyaWFibGUuXG4gIGNsaWVudFByb21pc2UgPSBjcmVhdGVDbGllbnQoKS5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gY29ubmVjdCB0byBNb25nb0RCOlwiLCBlcnIpO1xuICAgIHJldHVybiBudWxsO1xuICB9KTtcbn1cblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdG8gZ2V0IHRoZSBNb25nb0RCIGRhdGFiYXNlXG4gKiBJbmNsdWRlcyBmYWxsYmFjayB0byBpbi1tZW1vcnkgc3RvcmFnZSBpZiBNb25nb0RCIGlzIHVuYXZhaWxhYmxlXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxEYj59IE1vbmdvREIgZGF0YWJhc2Ugb3IgZmFsbGJhY2sgb2JqZWN0XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXREYXRhYmFzZSgpIHtcbiAgdHJ5IHtcbiAgICAvLyBBd2FpdCB0aGUgY2xpZW50IHdpdGggYSB0aW1lb3V0XG4gICAgY29uc3QgY2xpZW50ID0gYXdhaXQgUHJvbWlzZS5yYWNlKFtcbiAgICAgIGNsaWVudFByb21pc2UsXG4gICAgICBuZXcgUHJvbWlzZSgoXywgcmVqZWN0KSA9PiBcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiByZWplY3QobmV3IEVycm9yKCdNb25nb0RCIGNvbm5lY3Rpb24gdGltZW91dCcpKSwgNTAwMClcbiAgICAgIClcbiAgICBdKTtcbiAgICBcbiAgICAvLyBJZiBjbGllbnQgaXMgbnVsbCAoY29ubmVjdGlvbiBmYWlsZWQpLCB0aHJvdyBlcnJvciB0byB1c2UgZmFsbGJhY2tcbiAgICBpZiAoIWNsaWVudCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTW9uZ29EQiBjbGllbnQgaXMgbnVsbFwiKTtcbiAgICB9XG4gICAgXG4gICAgLy8gUmV0dXJuIHRoZSBkYXRhYmFzZSBcbiAgICByZXR1cm4gY2xpZW50LmRiKERCX05BTUUpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBnZXR0aW5nIE1vbmdvREIgZGF0YWJhc2U6XCIsIGVycm9yLm1lc3NhZ2UpO1xuICAgIFxuICAgIC8vIENyZWF0ZSBhIGxvY2FsU3RvcmFnZS1iYWNrZWQgZmFsbGJhY2tcbiAgICByZXR1cm4gY3JlYXRlTG9jYWxTdG9yYWdlRmFsbGJhY2tEYigpO1xuICB9XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBpbi1tZW1vcnkgZmFsbGJhY2sgZGF0YWJhc2UgdGhhdCB1c2VzIGxvY2FsU3RvcmFnZSB3aGVuIGF2YWlsYWJsZVxuICogVGhpcyBhbGxvd3MgdGhlIGFwcGxpY2F0aW9uIHRvIGZ1bmN0aW9uIHdpdGhvdXQgTW9uZ29EQlxuICogQHJldHVybnMge09iamVjdH0gT2JqZWN0IHRoYXQgbWltaWNzIE1vbmdvREIgZGF0YWJhc2UgQVBJXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUxvY2FsU3RvcmFnZUZhbGxiYWNrRGIoKSB7XG4gIC8vIFVzZSBhbiBpbi1tZW1vcnkgc3RvcmUgYXMgZmFsbGJhY2tcbiAgY29uc29sZS53YXJuKFwiVXNpbmcgaW4tbWVtb3J5L2xvY2FsU3RvcmFnZSBmYWxsYmFjayBmb3IgZGF0YWJhc2VcIik7XG4gIFxuICAvLyBDb2xsZWN0aW9uIGRhdGEgd2lsbCBiZSBzdG9yZWQgaGVyZSBpbiBtZW1vcnlcbiAgY29uc3QgY29sbGVjdGlvbnMgPSB7fTtcbiAgXG4gIC8vIFRyeSB0byBsb2FkIGV4aXN0aW5nIGRhdGEgZnJvbSBsb2NhbFN0b3JhZ2VcbiAgdHJ5IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmxvY2FsU3RvcmFnZSkge1xuICAgICAgLy8gTG9hZCBleGlzdGluZyBkYXRhIGZvciBlYWNoIGtub3duIGNvbGxlY3Rpb24gXG4gICAgICBjb25zdCBrbm93bkNvbGxlY3Rpb25zID0gWyd1c2VycycsICdkZWFscycsICdhY2NvdW50cycsICdzZXNzaW9ucyddO1xuICAgICAgXG4gICAgICBmb3IgKGNvbnN0IGNvbGxlY3Rpb24gb2Yga25vd25Db2xsZWN0aW9ucykge1xuICAgICAgICBjb25zdCBzdG9yZWREYXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oYHJlaHVzdGxlXyR7Y29sbGVjdGlvbn1gKTtcbiAgICAgICAgaWYgKHN0b3JlZERhdGEpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29sbGVjdGlvbnNbY29sbGVjdGlvbl0gPSBKU09OLnBhcnNlKHN0b3JlZERhdGEpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYExvYWRlZCAke2NvbGxlY3Rpb25zW2NvbGxlY3Rpb25dLmxlbmd0aH0gaXRlbXMgZnJvbSBsb2NhbFN0b3JhZ2UgZm9yICR7Y29sbGVjdGlvbn1gKTtcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBGYWlsZWQgdG8gcGFyc2UgbG9jYWxTdG9yYWdlIGRhdGEgZm9yICR7Y29sbGVjdGlvbn06YCwgZSk7XG4gICAgICAgICAgICBjb2xsZWN0aW9uc1tjb2xsZWN0aW9uXSA9IFtdO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb2xsZWN0aW9uc1tjb2xsZWN0aW9uXSA9IFtdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGFjY2Vzc2luZyBsb2NhbFN0b3JhZ2U6XCIsIGUpO1xuICB9XG4gIFxuICAvLyBIZWxwZXIgdG8gc2F2ZSBhIGNvbGxlY3Rpb24gdG8gbG9jYWxTdG9yYWdlXG4gIGNvbnN0IHNhdmVDb2xsZWN0aW9uID0gKG5hbWUsIGRhdGEpID0+IHtcbiAgICB0cnkge1xuICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5sb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYHJlaHVzdGxlXyR7bmFtZX1gLCBKU09OLnN0cmluZ2lmeShkYXRhKSk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5lcnJvcihgRmFpbGVkIHRvIHNhdmUgJHtuYW1lfSB0byBsb2NhbFN0b3JhZ2U6YCwgZSk7XG4gICAgfVxuICB9O1xuICBcbiAgLy8gUmV0dXJuIGEgTW9uZ29EQi1saWtlIGludGVyZmFjZVxuICByZXR1cm4ge1xuICAgIGNvbGxlY3Rpb246IChuYW1lKSA9PiB7XG4gICAgICAvLyBJbml0aWFsaXplIGNvbGxlY3Rpb24gaWYgaXQgZG9lc24ndCBleGlzdFxuICAgICAgaWYgKCFjb2xsZWN0aW9uc1tuYW1lXSkge1xuICAgICAgICBjb2xsZWN0aW9uc1tuYW1lXSA9IFtdO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBSZXR1cm4gYSBNb25nb0RCLWxpa2UgY29sbGVjdGlvbiBpbnRlcmZhY2VcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGZpbmRPbmU6IGFzeW5jIChxdWVyeSA9IHt9KSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coYFtMb2NhbERCXSBmaW5kT25lIGluICR7bmFtZX06YCwgcXVlcnkpO1xuICAgICAgICAgIGNvbnN0IGl0ZW1zID0gY29sbGVjdGlvbnNbbmFtZV0gfHwgW107XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gU2ltcGxlIHF1ZXJ5IG1hdGNoaW5nXG4gICAgICAgICAgaWYgKHF1ZXJ5Ll9pZCkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW1zLmZpbmQoaXRlbSA9PiBpdGVtLl9pZCA9PT0gcXVlcnkuX2lkKSB8fCBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAvLyBNYXRjaCBmaXJzdCBpdGVtIHRoYXQgaGFzIGFsbCBxdWVyeSBwcm9wZXJ0aWVzXG4gICAgICAgICAgcmV0dXJuIGl0ZW1zLmZpbmQoaXRlbSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmVudHJpZXMocXVlcnkpLmV2ZXJ5KChba2V5LCB2YWx1ZV0pID0+IFxuICAgICAgICAgICAgICBpdGVtW2tleV0gPT09IHZhbHVlXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0pIHx8IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICBmaW5kOiAocXVlcnkgPSB7fSkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGBbTG9jYWxEQl0gZmluZCBpbiAke25hbWV9OmAsIHF1ZXJ5KTtcbiAgICAgICAgICBjb25zdCBpdGVtcyA9IGNvbGxlY3Rpb25zW25hbWVdIHx8IFtdO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIEZpbHRlciBpdGVtcyBieSBxdWVyeVxuICAgICAgICAgIGxldCByZXN1bHRzID0gaXRlbXM7XG4gICAgICAgICAgaWYgKE9iamVjdC5rZXlzKHF1ZXJ5KS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICByZXN1bHRzID0gaXRlbXMuZmlsdGVyKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmVudHJpZXMocXVlcnkpLmV2ZXJ5KChba2V5LCB2YWx1ZV0pID0+IFxuICAgICAgICAgICAgICAgIGl0ZW1ba2V5XSA9PT0gdmFsdWVcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAvLyBSZXR1cm4gYSBjdXJzb3ItbGlrZSBvYmplY3RcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc29ydDogKHNvcnRTcGVjKSA9PiB7XG4gICAgICAgICAgICAgIC8vIFNpbXBsZSBzb3J0aW5nIGJ5IGEgc2luZ2xlIGZpZWxkXG4gICAgICAgICAgICAgIGlmIChzb3J0U3BlYyAmJiBPYmplY3Qua2V5cyhzb3J0U3BlYykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtmaWVsZCwgb3JkZXJdID0gT2JqZWN0LmVudHJpZXMoc29ydFNwZWMpWzBdO1xuICAgICAgICAgICAgICAgIHJlc3VsdHMuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgICAgaWYgKGFbZmllbGRdIDwgYltmaWVsZF0pIHJldHVybiBvcmRlciA9PT0gMSA/IC0xIDogMTtcbiAgICAgICAgICAgICAgICAgIGlmIChhW2ZpZWxkXSA+IGJbZmllbGRdKSByZXR1cm4gb3JkZXIgPT09IDEgPyAxIDogLTE7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICByZXR1cm4geyB0b0FycmF5OiBhc3luYyAoKSA9PiByZXN1bHRzIH07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdG9BcnJheTogYXN5bmMgKCkgPT4gcmVzdWx0c1xuICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICBpbnNlcnRPbmU6IGFzeW5jIChkb2MpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhgW0xvY2FsREJdIGluc2VydE9uZSBpbiAke25hbWV9OmAsIGRvYyk7XG4gICAgICAgICAgLy8gR2VuZXJhdGUgYW4gSUQgaWYgbm9uZSBwcm92aWRlZFxuICAgICAgICAgIGNvbnN0IG5ld0RvYyA9IHsgXG4gICAgICAgICAgICAuLi5kb2MsIFxuICAgICAgICAgICAgX2lkOiBkb2MuX2lkIHx8IGBsb2NhbF8ke0RhdGUubm93KCl9XyR7TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIsIDkpfWBcbiAgICAgICAgICB9O1xuICAgICAgICAgIFxuICAgICAgICAgIGNvbGxlY3Rpb25zW25hbWVdLnB1c2gobmV3RG9jKTtcbiAgICAgICAgICBzYXZlQ29sbGVjdGlvbihuYW1lLCBjb2xsZWN0aW9uc1tuYW1lXSk7XG4gICAgICAgICAgXG4gICAgICAgICAgcmV0dXJuIHsgXG4gICAgICAgICAgICBpbnNlcnRlZElkOiBuZXdEb2MuX2lkLFxuICAgICAgICAgICAgYWNrbm93bGVkZ2VkOiB0cnVlXG4gICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIGRlbGV0ZU9uZTogYXN5bmMgKGZpbHRlcikgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGBbTG9jYWxEQl0gZGVsZXRlT25lIGluICR7bmFtZX06YCwgZmlsdGVyKTtcbiAgICAgICAgICBjb25zdCBpdGVtcyA9IGNvbGxlY3Rpb25zW25hbWVdO1xuICAgICAgICAgIGNvbnN0IGluaXRpYWxMZW5ndGggPSBpdGVtcy5sZW5ndGg7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gUmVtb3ZlIHRoZSBmaXJzdCBtYXRjaGluZyBpdGVtXG4gICAgICAgICAgY29uc3QgaW5kZXggPSBpdGVtcy5maW5kSW5kZXgoaXRlbSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmVudHJpZXMoZmlsdGVyKS5ldmVyeSgoW2tleSwgdmFsdWVdKSA9PiBcbiAgICAgICAgICAgICAgaXRlbVtrZXldID09PSB2YWx1ZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICBpdGVtcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgc2F2ZUNvbGxlY3Rpb24obmFtZSwgaXRlbXMpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICByZXR1cm4geyBcbiAgICAgICAgICAgIGRlbGV0ZWRDb3VudDogaW5pdGlhbExlbmd0aCAtIGl0ZW1zLmxlbmd0aCxcbiAgICAgICAgICAgIGFja25vd2xlZGdlZDogdHJ1ZVxuICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICB1cGRhdGVPbmU6IGFzeW5jIChmaWx0ZXIsIHVwZGF0ZSkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGBbTG9jYWxEQl0gdXBkYXRlT25lIGluICR7bmFtZX06YCwgZmlsdGVyLCB1cGRhdGUpO1xuICAgICAgICAgIGNvbnN0IGl0ZW1zID0gY29sbGVjdGlvbnNbbmFtZV07XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gRmluZCB0aGUgaXRlbSB0byB1cGRhdGVcbiAgICAgICAgICBjb25zdCBpbmRleCA9IGl0ZW1zLmZpbmRJbmRleChpdGVtID0+IHtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuZW50cmllcyhmaWx0ZXIpLmV2ZXJ5KChba2V5LCB2YWx1ZV0pID0+IFxuICAgICAgICAgICAgICBpdGVtW2tleV0gPT09IHZhbHVlXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgIC8vIEFwcGx5ICRzZXQgdXBkYXRlc1xuICAgICAgICAgICAgaWYgKHVwZGF0ZS4kc2V0KSB7XG4gICAgICAgICAgICAgIGl0ZW1zW2luZGV4XSA9IHsgXG4gICAgICAgICAgICAgICAgLi4uaXRlbXNbaW5kZXhdLCBcbiAgICAgICAgICAgICAgICAuLi51cGRhdGUuJHNldCBcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgc2F2ZUNvbGxlY3Rpb24obmFtZSwgaXRlbXMpO1xuICAgICAgICAgICAgcmV0dXJuIHsgXG4gICAgICAgICAgICAgIG1vZGlmaWVkQ291bnQ6IDEsXG4gICAgICAgICAgICAgIGFja25vd2xlZGdlZDogdHJ1ZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgcmV0dXJuIHsgXG4gICAgICAgICAgICBtb2RpZmllZENvdW50OiAwLFxuICAgICAgICAgICAgYWNrbm93bGVkZ2VkOiB0cnVlXG4gICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIGZpbmRPbmVBbmRVcGRhdGU6IGFzeW5jIChmaWx0ZXIsIHVwZGF0ZSwgb3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coYFtMb2NhbERCXSBmaW5kT25lQW5kVXBkYXRlIGluICR7bmFtZX06YCwgZmlsdGVyLCB1cGRhdGUsIG9wdGlvbnMpO1xuICAgICAgICAgIGNvbnN0IGl0ZW1zID0gY29sbGVjdGlvbnNbbmFtZV07XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gRmluZCB0aGUgaXRlbSB0byB1cGRhdGVcbiAgICAgICAgICBjb25zdCBpbmRleCA9IGl0ZW1zLmZpbmRJbmRleChpdGVtID0+IHtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuZW50cmllcyhmaWx0ZXIpLmV2ZXJ5KChba2V5LCB2YWx1ZV0pID0+IFxuICAgICAgICAgICAgICBpdGVtW2tleV0gPT09IHZhbHVlXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIFxuICAgICAgICAgIGxldCByZXR1cm5WYWx1ZSA9IG51bGw7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgLy8gU3RvcmUgdGhlIG9yaWdpbmFsIHZhbHVlIGlmIHJldHVybmluZyBiZWZvcmUgdXBkYXRlXG4gICAgICAgICAgICBpZiAoIW9wdGlvbnMucmV0dXJuRG9jdW1lbnQgfHwgb3B0aW9ucy5yZXR1cm5Eb2N1bWVudCA9PT0gJ2JlZm9yZScpIHtcbiAgICAgICAgICAgICAgcmV0dXJuVmFsdWUgPSB7IC4uLml0ZW1zW2luZGV4XSB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBBcHBseSAkc2V0IHVwZGF0ZXNcbiAgICAgICAgICAgIGlmICh1cGRhdGUuJHNldCkge1xuICAgICAgICAgICAgICBpdGVtc1tpbmRleF0gPSB7IFxuICAgICAgICAgICAgICAgIC4uLml0ZW1zW2luZGV4XSwgXG4gICAgICAgICAgICAgICAgLi4udXBkYXRlLiRzZXQgXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFN0b3JlIHRoZSB1cGRhdGVkIHZhbHVlIGlmIHJldHVybmluZyBhZnRlciB1cGRhdGVcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnJldHVybkRvY3VtZW50ID09PSAnYWZ0ZXInKSB7XG4gICAgICAgICAgICAgIHJldHVyblZhbHVlID0geyAuLi5pdGVtc1tpbmRleF0gfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgc2F2ZUNvbGxlY3Rpb24obmFtZSwgaXRlbXMpO1xuICAgICAgICAgIH0gZWxzZSBpZiAob3B0aW9ucy51cHNlcnQpIHtcbiAgICAgICAgICAgIC8vIENyZWF0ZSBhIG5ldyBkb2N1bWVudCBpZiB1cHNlcnQgaXMgdHJ1ZVxuICAgICAgICAgICAgY29uc3QgbmV3RG9jID0geyBcbiAgICAgICAgICAgICAgLi4uZmlsdGVyLFxuICAgICAgICAgICAgICAuLi51cGRhdGUuJHNldCxcbiAgICAgICAgICAgICAgX2lkOiBgbG9jYWxfJHtEYXRlLm5vdygpfV8ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZygyLCA5KX1gXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpdGVtcy5wdXNoKG5ld0RvYyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnJldHVybkRvY3VtZW50ID09PSAnYWZ0ZXInKSB7XG4gICAgICAgICAgICAgIHJldHVyblZhbHVlID0geyAuLi5uZXdEb2MgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgc2F2ZUNvbGxlY3Rpb24obmFtZSwgaXRlbXMpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICByZXR1cm4geyBcbiAgICAgICAgICAgIHZhbHVlOiByZXR1cm5WYWx1ZSxcbiAgICAgICAgICAgIG9rOiAxXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9LFxuICAgIFxuICAgIGxpc3RDb2xsZWN0aW9uczogKCkgPT4gKHtcbiAgICAgIHRvQXJyYXk6IGFzeW5jICgpID0+IE9iamVjdC5rZXlzKGNvbGxlY3Rpb25zKS5tYXAobmFtZSA9PiAoeyBuYW1lIH0pKVxuICAgIH0pLFxuICAgIFxuICAgIGNvbW1hbmQ6IGFzeW5jIChjbWQpID0+IHtcbiAgICAgIC8vIFNpbXBsZSBzdXBwb3J0IGZvciBwaW5nIGNvbW1hbmRcbiAgICAgIGlmIChjbWQucGluZykge1xuICAgICAgICByZXR1cm4geyBvazogMCB9OyAvLyBSZXR1cm4gMCB0byBpbmRpY2F0ZSBpdCdzIG5vdCBhIHJlYWwgTW9uZ29EQlxuICAgICAgfVxuICAgICAgcmV0dXJuIHsgb2s6IDAgfTtcbiAgICB9LFxuICAgIFxuICAgIC8vIEFkZCBhIHNwZWNpYWwgbWV0aG9kIHRvIGluZGljYXRlIHRoaXMgaXMgdGhlIGZhbGxiYWNrXG4gICAgaXNGYWxsYmFjazogdHJ1ZVxuICB9O1xufVxuXG4vLyBFeHBvcnQgY2xpZW50UHJvbWlzZVxuZXhwb3J0IGRlZmF1bHQgY2xpZW50UHJvbWlzZTsiXSwibmFtZXMiOlsiTW9uZ29DbGllbnQiLCJEQl9OQU1FIiwiZ2V0TW9uZ29Db25maWciLCJ1cmkiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9VUkkiLCJjb25zb2xlIiwiZXJyb3IiLCJvcHRpb25zIiwiaW5jbHVkZXMiLCJjcmVkZW50aWFsUGFydCIsInNwbGl0IiwidXNlcm5hbWUiLCJsb2ciLCJpc1NydiIsImJhc2VPcHRpb25zIiwiY29ubmVjdFRpbWVvdXRNUyIsInNlcnZlclNlbGVjdGlvblRpbWVvdXRNUyIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsInBhcnNlZFVyaSIsImUiLCJkaXJlY3RDb25uZWN0aW9uIiwiRXJyb3IiLCJjbGllbnQiLCJjbGllbnRQcm9taXNlIiwiY3JlYXRlQ2xpZW50IiwibW9uZ29DbGllbnQiLCJjb25uZWN0UHJvbWlzZSIsImNvbm5lY3QiLCJnbG9iYWwiLCJfbW9uZ29DbGllbnRQcm9taXNlIiwiY2F0Y2giLCJlcnIiLCJnZXREYXRhYmFzZSIsIlByb21pc2UiLCJyYWNlIiwiXyIsInJlamVjdCIsInNldFRpbWVvdXQiLCJkYiIsIm1lc3NhZ2UiLCJjcmVhdGVMb2NhbFN0b3JhZ2VGYWxsYmFja0RiIiwid2FybiIsImNvbGxlY3Rpb25zIiwid2luZG93IiwibG9jYWxTdG9yYWdlIiwia25vd25Db2xsZWN0aW9ucyIsImNvbGxlY3Rpb24iLCJzdG9yZWREYXRhIiwiZ2V0SXRlbSIsIkpTT04iLCJwYXJzZSIsImxlbmd0aCIsInNhdmVDb2xsZWN0aW9uIiwibmFtZSIsImRhdGEiLCJzZXRJdGVtIiwic3RyaW5naWZ5IiwiZmluZE9uZSIsInF1ZXJ5IiwiaXRlbXMiLCJfaWQiLCJmaW5kIiwiaXRlbSIsIk9iamVjdCIsImVudHJpZXMiLCJldmVyeSIsImtleSIsInZhbHVlIiwicmVzdWx0cyIsImtleXMiLCJmaWx0ZXIiLCJzb3J0Iiwic29ydFNwZWMiLCJmaWVsZCIsIm9yZGVyIiwiYSIsImIiLCJ0b0FycmF5IiwiaW5zZXJ0T25lIiwiZG9jIiwibmV3RG9jIiwiRGF0ZSIsIm5vdyIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0cmluZyIsInB1c2giLCJpbnNlcnRlZElkIiwiYWNrbm93bGVkZ2VkIiwiZGVsZXRlT25lIiwiaW5pdGlhbExlbmd0aCIsImluZGV4IiwiZmluZEluZGV4Iiwic3BsaWNlIiwiZGVsZXRlZENvdW50IiwidXBkYXRlT25lIiwidXBkYXRlIiwiJHNldCIsIm1vZGlmaWVkQ291bnQiLCJmaW5kT25lQW5kVXBkYXRlIiwicmV0dXJuVmFsdWUiLCJyZXR1cm5Eb2N1bWVudCIsInVwc2VydCIsIm9rIiwibGlzdENvbGxlY3Rpb25zIiwibWFwIiwiY29tbWFuZCIsImNtZCIsInBpbmciLCJpc0ZhbGxiYWNrIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./lib/mongodb.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/auth/[...nextauth].js */ \"(api-node)/./pages/api/auth/[...nextauth].js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/auth/[...nextauth]\",\n        pathname: \"/api/auth/[...nextauth]\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_auth_nextauth_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGYXV0aCUyRiU1Qi4uLm5leHRhdXRoJTVEJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZhdXRoJTJGJTVCLi4ubmV4dGF1dGglNUQuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDOEQ7QUFDOUQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHdEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyx3REFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0uanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2F1dGgvWy4uLm5leHRhdXRoXVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2F1dGgvWy4uLm5leHRhdXRoXVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/auth/[...nextauth].js":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _next_auth_mongodb_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @next-auth/mongodb-adapter */ \"@next-auth/mongodb-adapter\");\n/* harmony import */ var _next_auth_mongodb_adapter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_next_auth_mongodb_adapter__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/mongodb */ \"(api-node)/./lib/mongodb.js\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/auth */ \"(api-node)/./lib/auth.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_auth__WEBPACK_IMPORTED_MODULE_4__]);\n_lib_auth__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n// Let's simplify our approach and make NextAuth more resilient\n// We'll avoid complex setup that could throw errors\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (next_auth__WEBPACK_IMPORTED_MODULE_0___default()({\n    // Add adapter only if it's available in a try/catch\n    ...(()=>{\n        try {\n            return {\n                adapter: (0,_next_auth_mongodb_adapter__WEBPACK_IMPORTED_MODULE_2__.MongoDBAdapter)(_lib_mongodb__WEBPACK_IMPORTED_MODULE_3__[\"default\"])\n            };\n        } catch (e) {\n            console.warn(\"MongoDB adapter initialization failed, falling back to JWT only\");\n            return {}; // No adapter if MongoDB is unavailable\n        }\n    })(),\n    providers: [\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default()({\n            name: \"Credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"text\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials) {\n                    return null;\n                }\n                const { email, password } = credentials;\n                try {\n                    // Fetch the user from MongoDB\n                    const user = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_4__.getUserByEmail)(email);\n                    if (!user) {\n                        console.log(`No user found with email: ${email}`);\n                        return null;\n                    }\n                    // Verify the password\n                    const isValid = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_4__.verifyPassword)(password, user.password);\n                    if (!isValid) {\n                        console.log('Invalid password');\n                        return null;\n                    }\n                    // Return a user object excluding the password\n                    return {\n                        id: user._id.toString(),\n                        email: user.email,\n                        name: user.name || '',\n                        userId: user._id.toString()\n                    };\n                } catch (error) {\n                    console.error('Error in authorize:', error);\n                    throw new Error('Authentication failed');\n                }\n            }\n        })\n    ],\n    session: {\n        strategy: \"jwt\"\n    },\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n                token.userId = user.id; // Ensure userId is in the token\n                token.name = user.name;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (token) {\n                session.user.id = token.id;\n                session.user.userId = token.id; // Add userId to session for consistency\n                if (token.name) {\n                    session.user.name = token.name;\n                }\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/login\",\n        error: \"/login\",\n        newUser: \"/dashboard\"\n    },\n    secret: process.env.NEXTAUTH_SECRET || \"a-strong-secret-for-development-only\",\n    debug: \"development\" === 'development'\n}));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQWlDO0FBQ2lDO0FBQ047QUFDWDtBQUNrQjtBQUVuRSwrREFBK0Q7QUFDL0Qsb0RBQW9EO0FBQ3BELGlFQUFlQSxnREFBUUEsQ0FBQztJQUN0QixvREFBb0Q7SUFDcEQsR0FBRyxDQUFDO1FBQ0YsSUFBSTtZQUNGLE9BQU87Z0JBQUVNLFNBQVNKLDBFQUFjQSxDQUFDQyxvREFBYUE7WUFBRTtRQUNsRCxFQUFFLE9BQU9JLEdBQUc7WUFDVkMsUUFBUUMsSUFBSSxDQUFDO1lBQ2IsT0FBTyxDQUFDLEdBQUcsdUNBQXVDO1FBQ3BEO0lBQ0YsSUFBSTtJQUNKQyxXQUFXO1FBQ1RULHNFQUFtQkEsQ0FBQztZQUNsQlUsTUFBTTtZQUNOQyxhQUFhO2dCQUNYQyxPQUFPO29CQUFFQyxPQUFPO29CQUFTQyxNQUFNO2dCQUFPO2dCQUN0Q0MsVUFBVTtvQkFBRUYsT0FBTztvQkFBWUMsTUFBTTtnQkFBVztZQUNsRDtZQUNBLE1BQU1FLFdBQVVMLFdBQVc7Z0JBQ3pCLElBQUksQ0FBQ0EsYUFBYTtvQkFDaEIsT0FBTztnQkFDVDtnQkFFQSxNQUFNLEVBQUVDLEtBQUssRUFBRUcsUUFBUSxFQUFFLEdBQUdKO2dCQUU1QixJQUFJO29CQUNGLDhCQUE4QjtvQkFDOUIsTUFBTU0sT0FBTyxNQUFNZCx5REFBY0EsQ0FBQ1M7b0JBRWxDLElBQUksQ0FBQ0ssTUFBTTt3QkFDVFYsUUFBUVcsR0FBRyxDQUFDLENBQUMsMEJBQTBCLEVBQUVOLE9BQU87d0JBQ2hELE9BQU87b0JBQ1Q7b0JBRUEsc0JBQXNCO29CQUN0QixNQUFNTyxVQUFVLE1BQU1mLHlEQUFjQSxDQUFDVyxVQUFVRSxLQUFLRixRQUFRO29CQUU1RCxJQUFJLENBQUNJLFNBQVM7d0JBQ1paLFFBQVFXLEdBQUcsQ0FBQzt3QkFDWixPQUFPO29CQUNUO29CQUVBLDhDQUE4QztvQkFDOUMsT0FBTzt3QkFDTEUsSUFBSUgsS0FBS0ksR0FBRyxDQUFDQyxRQUFRO3dCQUNyQlYsT0FBT0ssS0FBS0wsS0FBSzt3QkFDakJGLE1BQU1PLEtBQUtQLElBQUksSUFBSTt3QkFDbkJhLFFBQVFOLEtBQUtJLEdBQUcsQ0FBQ0MsUUFBUTtvQkFDM0I7Z0JBQ0YsRUFBRSxPQUFPRSxPQUFPO29CQUNkakIsUUFBUWlCLEtBQUssQ0FBQyx1QkFBdUJBO29CQUNyQyxNQUFNLElBQUlDLE1BQU07Z0JBQ2xCO1lBQ0Y7UUFDRjtLQUNEO0lBQ0RDLFNBQVM7UUFDUEMsVUFBVTtJQUNaO0lBQ0FDLFdBQVc7UUFDVCxNQUFNQyxLQUFJLEVBQUVDLEtBQUssRUFBRWIsSUFBSSxFQUFFO1lBQ3ZCLElBQUlBLE1BQU07Z0JBQ1JhLE1BQU1WLEVBQUUsR0FBR0gsS0FBS0csRUFBRTtnQkFDbEJVLE1BQU1QLE1BQU0sR0FBR04sS0FBS0csRUFBRSxFQUFFLGdDQUFnQztnQkFDeERVLE1BQU1wQixJQUFJLEdBQUdPLEtBQUtQLElBQUk7WUFDeEI7WUFDQSxPQUFPb0I7UUFDVDtRQUNBLE1BQU1KLFNBQVEsRUFBRUEsT0FBTyxFQUFFSSxLQUFLLEVBQUU7WUFDOUIsSUFBSUEsT0FBTztnQkFDVEosUUFBUVQsSUFBSSxDQUFDRyxFQUFFLEdBQUdVLE1BQU1WLEVBQUU7Z0JBQzFCTSxRQUFRVCxJQUFJLENBQUNNLE1BQU0sR0FBR08sTUFBTVYsRUFBRSxFQUFFLHdDQUF3QztnQkFDeEUsSUFBSVUsTUFBTXBCLElBQUksRUFBRTtvQkFDZGdCLFFBQVFULElBQUksQ0FBQ1AsSUFBSSxHQUFHb0IsTUFBTXBCLElBQUk7Z0JBQ2hDO1lBQ0Y7WUFDQSxPQUFPZ0I7UUFDVDtJQUNGO0lBQ0FLLE9BQU87UUFDTEMsUUFBUTtRQUNSUixPQUFPO1FBQ1BTLFNBQVM7SUFDWDtJQUNBQyxRQUFRQyxRQUFRQyxHQUFHLENBQUNDLGVBQWUsSUFBSTtJQUN2Q0MsT0FBT0gsa0JBQXlCO0FBQ2xDLEVBQUUsRUFBQyIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9wYWdlcy9hcGkvYXV0aC9bLi4ubmV4dGF1dGhdLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOZXh0QXV0aCBmcm9tIFwibmV4dC1hdXRoXCI7XG5pbXBvcnQgQ3JlZGVudGlhbHNQcm92aWRlciBmcm9tIFwibmV4dC1hdXRoL3Byb3ZpZGVycy9jcmVkZW50aWFsc1wiO1xuaW1wb3J0IHsgTW9uZ29EQkFkYXB0ZXIgfSBmcm9tIFwiQG5leHQtYXV0aC9tb25nb2RiLWFkYXB0ZXJcIjtcbmltcG9ydCBjbGllbnRQcm9taXNlIGZyb20gXCIuLi8uLi8uLi9saWIvbW9uZ29kYlwiO1xuaW1wb3J0IHsgZ2V0VXNlckJ5RW1haWwsIHZlcmlmeVBhc3N3b3JkIH0gZnJvbSBcIi4uLy4uLy4uL2xpYi9hdXRoXCI7XG5cbi8vIExldCdzIHNpbXBsaWZ5IG91ciBhcHByb2FjaCBhbmQgbWFrZSBOZXh0QXV0aCBtb3JlIHJlc2lsaWVudFxuLy8gV2UnbGwgYXZvaWQgY29tcGxleCBzZXR1cCB0aGF0IGNvdWxkIHRocm93IGVycm9yc1xuZXhwb3J0IGRlZmF1bHQgTmV4dEF1dGgoe1xuICAvLyBBZGQgYWRhcHRlciBvbmx5IGlmIGl0J3MgYXZhaWxhYmxlIGluIGEgdHJ5L2NhdGNoXG4gIC4uLigoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiB7IGFkYXB0ZXI6IE1vbmdvREJBZGFwdGVyKGNsaWVudFByb21pc2UpIH07XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS53YXJuKFwiTW9uZ29EQiBhZGFwdGVyIGluaXRpYWxpemF0aW9uIGZhaWxlZCwgZmFsbGluZyBiYWNrIHRvIEpXVCBvbmx5XCIpO1xuICAgICAgcmV0dXJuIHt9OyAvLyBObyBhZGFwdGVyIGlmIE1vbmdvREIgaXMgdW5hdmFpbGFibGVcbiAgICB9XG4gIH0pKCksXG4gIHByb3ZpZGVyczogW1xuICAgIENyZWRlbnRpYWxzUHJvdmlkZXIoe1xuICAgICAgbmFtZTogXCJDcmVkZW50aWFsc1wiLFxuICAgICAgY3JlZGVudGlhbHM6IHtcbiAgICAgICAgZW1haWw6IHsgbGFiZWw6IFwiRW1haWxcIiwgdHlwZTogXCJ0ZXh0XCIgfSxcbiAgICAgICAgcGFzc3dvcmQ6IHsgbGFiZWw6IFwiUGFzc3dvcmRcIiwgdHlwZTogXCJwYXNzd29yZFwiIH0sXG4gICAgICB9LFxuICAgICAgYXN5bmMgYXV0aG9yaXplKGNyZWRlbnRpYWxzKSB7XG4gICAgICAgIGlmICghY3JlZGVudGlhbHMpIHtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSBjcmVkZW50aWFscztcbiAgICAgICAgXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gRmV0Y2ggdGhlIHVzZXIgZnJvbSBNb25nb0RCXG4gICAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IGdldFVzZXJCeUVtYWlsKGVtYWlsKTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBObyB1c2VyIGZvdW5kIHdpdGggZW1haWw6ICR7ZW1haWx9YCk7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gVmVyaWZ5IHRoZSBwYXNzd29yZFxuICAgICAgICAgIGNvbnN0IGlzVmFsaWQgPSBhd2FpdCB2ZXJpZnlQYXNzd29yZChwYXNzd29yZCwgdXNlci5wYXNzd29yZCk7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKCFpc1ZhbGlkKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnSW52YWxpZCBwYXNzd29yZCcpO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIC8vIFJldHVybiBhIHVzZXIgb2JqZWN0IGV4Y2x1ZGluZyB0aGUgcGFzc3dvcmRcbiAgICAgICAgICByZXR1cm4geyBcbiAgICAgICAgICAgIGlkOiB1c2VyLl9pZC50b1N0cmluZygpLFxuICAgICAgICAgICAgZW1haWw6IHVzZXIuZW1haWwsXG4gICAgICAgICAgICBuYW1lOiB1c2VyLm5hbWUgfHwgJycsXG4gICAgICAgICAgICB1c2VySWQ6IHVzZXIuX2lkLnRvU3RyaW5nKCksIC8vIEFkZCB1c2VySWQgdG8gYmUgY29uc2lzdGVudFxuICAgICAgICAgIH07XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gYXV0aG9yaXplOicsIGVycm9yKTtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0F1dGhlbnRpY2F0aW9uIGZhaWxlZCcpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgIH0pLFxuICBdLFxuICBzZXNzaW9uOiB7XG4gICAgc3RyYXRlZ3k6IFwiand0XCIsXG4gIH0sXG4gIGNhbGxiYWNrczoge1xuICAgIGFzeW5jIGp3dCh7IHRva2VuLCB1c2VyIH0pIHtcbiAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgIHRva2VuLmlkID0gdXNlci5pZDtcbiAgICAgICAgdG9rZW4udXNlcklkID0gdXNlci5pZDsgLy8gRW5zdXJlIHVzZXJJZCBpcyBpbiB0aGUgdG9rZW5cbiAgICAgICAgdG9rZW4ubmFtZSA9IHVzZXIubmFtZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0b2tlbjtcbiAgICB9LFxuICAgIGFzeW5jIHNlc3Npb24oeyBzZXNzaW9uLCB0b2tlbiB9KSB7XG4gICAgICBpZiAodG9rZW4pIHtcbiAgICAgICAgc2Vzc2lvbi51c2VyLmlkID0gdG9rZW4uaWQ7XG4gICAgICAgIHNlc3Npb24udXNlci51c2VySWQgPSB0b2tlbi5pZDsgLy8gQWRkIHVzZXJJZCB0byBzZXNzaW9uIGZvciBjb25zaXN0ZW5jeVxuICAgICAgICBpZiAodG9rZW4ubmFtZSkge1xuICAgICAgICAgIHNlc3Npb24udXNlci5uYW1lID0gdG9rZW4ubmFtZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHNlc3Npb247XG4gICAgfSxcbiAgfSxcbiAgcGFnZXM6IHtcbiAgICBzaWduSW46IFwiL2xvZ2luXCIsXG4gICAgZXJyb3I6IFwiL2xvZ2luXCIsIC8vIEVycm9yIGNvZGUgcGFzc2VkIGluIHF1ZXJ5IHN0cmluZyBhcyA/ZXJyb3I9XG4gICAgbmV3VXNlcjogXCIvZGFzaGJvYXJkXCIsIC8vIFJlZGlyZWN0IG5ldyB1c2VycyB0byBkYXNoYm9hcmRcbiAgfSxcbiAgc2VjcmV0OiBwcm9jZXNzLmVudi5ORVhUQVVUSF9TRUNSRVQgfHwgXCJhLXN0cm9uZy1zZWNyZXQtZm9yLWRldmVsb3BtZW50LW9ubHlcIixcbiAgZGVidWc6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnLFxufSk7Il0sIm5hbWVzIjpbIk5leHRBdXRoIiwiQ3JlZGVudGlhbHNQcm92aWRlciIsIk1vbmdvREJBZGFwdGVyIiwiY2xpZW50UHJvbWlzZSIsImdldFVzZXJCeUVtYWlsIiwidmVyaWZ5UGFzc3dvcmQiLCJhZGFwdGVyIiwiZSIsImNvbnNvbGUiLCJ3YXJuIiwicHJvdmlkZXJzIiwibmFtZSIsImNyZWRlbnRpYWxzIiwiZW1haWwiLCJsYWJlbCIsInR5cGUiLCJwYXNzd29yZCIsImF1dGhvcml6ZSIsInVzZXIiLCJsb2ciLCJpc1ZhbGlkIiwiaWQiLCJfaWQiLCJ0b1N0cmluZyIsInVzZXJJZCIsImVycm9yIiwiRXJyb3IiLCJzZXNzaW9uIiwic3RyYXRlZ3kiLCJjYWxsYmFja3MiLCJqd3QiLCJ0b2tlbiIsInBhZ2VzIiwic2lnbkluIiwibmV3VXNlciIsInNlY3JldCIsInByb2Nlc3MiLCJlbnYiLCJORVhUQVVUSF9TRUNSRVQiLCJkZWJ1ZyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/auth/[...nextauth].js\n");

/***/ }),

/***/ "@next-auth/mongodb-adapter":
/*!*********************************************!*\
  !*** external "@next-auth/mongodb-adapter" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("@next-auth/mongodb-adapter");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = import("bcryptjs");;

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next-auth/react":
/*!**********************************!*\
  !*** external "next-auth/react" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("next-auth/react");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();