"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/deals";
exports.ids = ["pages/api/deals"];
exports.modules = {

/***/ "(api-node)/./lib/mongodb.js":
/*!************************!*\
  !*** ./lib/mongodb.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\n// Check if we're on the client side\nconst isClient = \"undefined\" !== 'undefined';\n// Only access MONGODB_URI on the server side\nconst MONGODB_URI = !isClient ? process.env.MONGODB_URI : null;\n// Skip validation on client-side\nif (!isClient && !MONGODB_URI) {\n    throw new Error(\"Please define the MONGODB_URI\");\n}\n// Parse username from URI for logging purposes only\ntry {\n    if (MONGODB_URI.includes('@')) {\n        const credentialPart = MONGODB_URI.split('@')[0].split('//')[1];\n        if (credentialPart && credentialPart.includes(':')) {\n            const username = credentialPart.split(':')[0];\n            console.log(`Using MongoDB with username: ${username}`);\n        }\n    }\n} catch (error) {\n// Ignore parsing errors\n}\nlet cached = global.mongoose;\nif (!cached) {\n    cached = global.mongoose = {\n        conn: null,\n        promise: null\n    };\n}\nasync function dbConnect() {\n    // If we're on the client side, return a dummy connection that won't crash\n    if (isClient) {\n        console.log(\"Client-side MongoDB access attempted - using mock\");\n        return createMockMongoose();\n    }\n    if (cached.conn) {\n        console.log(\"Using cached database connection\");\n        return cached.conn;\n    }\n    if (!cached.promise) {\n        const opts = {\n            bufferCommands: false,\n            // Use these options for more reliable connection\n            serverSelectionTimeoutMS: 5000,\n            connectTimeoutMS: 10000\n        };\n        console.log(\"Connecting to MongoDB...\");\n        cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI, opts).then((mongoose)=>{\n            console.log(\"MongoDB connected successfully\");\n            return mongoose;\n        }).catch((error)=>{\n            console.error(\"MongoDB connection error:\", error);\n            // Return a \"mock mongoose\" that won't crash but won't do anything\n            // This allows the app to continue running without a database\n            return createMockMongoose();\n        });\n    }\n    try {\n        cached.conn = await cached.promise;\n        return cached.conn;\n    } catch (e) {\n        console.error(\"Error resolving MongoDB connection:\", e);\n        throw e;\n    }\n}\n// Creates a mock Mongoose that won't crash but won't do anything\n// Used as a fallback when MongoDB connection fails\nfunction createMockMongoose() {\n    console.warn(\"Using mock Mongoose (no database persistence)\");\n    // In-memory storage for collections\n    const collections = {};\n    // Initialize with empty collections\n    const knownCollections = [\n        'users',\n        'deals',\n        'accounts',\n        'User',\n        'Deal'\n    ];\n    knownCollections.forEach((name)=>{\n        collections[name] = [];\n    });\n    // Try to load from localStorage or global memory\n    if (false) {} else if (typeof global !== 'undefined' && global._localDbStorage) {\n        knownCollections.forEach((name)=>{\n            try {\n                const data = global._localDbStorage[`rehustle_${name}`];\n                if (data) {\n                    collections[name] = JSON.parse(data);\n                    console.log(`Loaded ${collections[name].length} items from server memory for ${name}`);\n                }\n            } catch (e) {\n                console.error(`Error loading ${name} from server memory:`, e);\n            }\n        });\n    }\n    // Save data helper\n    const saveCollection = (name, data)=>{\n        if (false) {} else if (typeof global !== 'undefined') {\n            if (!global._localDbStorage) {\n                global._localDbStorage = {};\n            }\n            global._localDbStorage[`rehustle_${name}`] = JSON.stringify(data);\n        }\n    };\n    // Create mock models for each known collection type\n    const mockModels = {};\n    knownCollections.forEach((name)=>{\n        // Create a basic model implementation\n        mockModels[name] = {\n            findOne: async (query)=>{\n                console.log(`[MockDB] findOne in ${name}:`, query);\n                const found = collections[name].find((doc)=>Object.entries(query).every(([key, value])=>doc[key] === value));\n                return found ? {\n                    ...found\n                } : null;\n            },\n            findById: async (id)=>{\n                console.log(`[MockDB] findById in ${name}:`, id);\n                const found = collections[name].find((doc)=>doc._id === id);\n                return found ? {\n                    ...found\n                } : null;\n            },\n            find: async (query)=>{\n                console.log(`[MockDB] find in ${name}:`, query);\n                return collections[name].filter((doc)=>Object.entries(query).every(([key, value])=>doc[key] === value));\n            },\n            create: async (data)=>{\n                console.log(`[MockDB] create in ${name}:`, data);\n                const _id = `mock_${Date.now()}_${Math.random().toString(36).substring(2, 8)}`;\n                const newDoc = {\n                    ...data,\n                    _id\n                };\n                collections[name].push(newDoc);\n                saveCollection(name, collections[name]);\n                return {\n                    ...newDoc\n                };\n            },\n            findByIdAndUpdate: async (id, update, options)=>{\n                console.log(`[MockDB] findByIdAndUpdate in ${name}:`, id, update);\n                const index = collections[name].findIndex((doc)=>doc._id === id);\n                if (index === -1) {\n                    if (options?.upsert) {\n                        const newDoc = {\n                            ...update,\n                            _id: id\n                        };\n                        collections[name].push(newDoc);\n                        saveCollection(name, collections[name]);\n                        return newDoc;\n                    }\n                    return null;\n                }\n                // Apply updates\n                if (update.$set) {\n                    collections[name][index] = {\n                        ...collections[name][index],\n                        ...update.$set\n                    };\n                } else {\n                    // Direct update\n                    collections[name][index] = {\n                        ...collections[name][index],\n                        ...update\n                    };\n                }\n                saveCollection(name, collections[name]);\n                return {\n                    ...collections[name][index]\n                };\n            },\n            updateOne: async (filter, update)=>{\n                console.log(`[MockDB] updateOne in ${name}:`, filter, update);\n                const index = collections[name].findIndex((doc)=>Object.entries(filter).every(([key, value])=>doc[key] === value));\n                if (index !== -1) {\n                    if (update.$set) {\n                        collections[name][index] = {\n                            ...collections[name][index],\n                            ...update.$set\n                        };\n                    } else {\n                        collections[name][index] = {\n                            ...collections[name][index],\n                            ...update\n                        };\n                    }\n                    saveCollection(name, collections[name]);\n                    return {\n                        modifiedCount: 1,\n                        acknowledged: true\n                    };\n                }\n                return {\n                    modifiedCount: 0,\n                    acknowledged: true\n                };\n            },\n            deleteOne: async (filter)=>{\n                console.log(`[MockDB] deleteOne in ${name}:`, filter);\n                const initialLength = collections[name].length;\n                collections[name] = collections[name].filter((doc)=>!Object.entries(filter).every(([key, value])=>doc[key] === value));\n                if (initialLength !== collections[name].length) {\n                    saveCollection(name, collections[name]);\n                }\n                return {\n                    deletedCount: initialLength - collections[name].length,\n                    acknowledged: true\n                };\n            }\n        };\n    });\n    // Pre-initialize User model with test user data\n    if (collections['User'].length === 0) {\n        collections['User'].push({\n            _id: 'mock_test_user_id',\n            email: 'test@example.com',\n            password: 'password123',\n            name: 'Test User',\n            trial_start_date: new Date(),\n            is_subscribed: false,\n            createdAt: new Date()\n        });\n        saveCollection('User', collections['User']);\n    }\n    // Mock mongoose object with minimum required functionality\n    return {\n        // This is what we return from mongoose.connect()\n        connection: {\n            readyState: 1\n        },\n        models: mockModels,\n        model: (name, schema)=>{\n            // If model already exists, return it\n            if (mockModels[name]) {\n                return mockModels[name];\n            }\n            // Otherwise create a new one\n            if (!collections[name]) {\n                collections[name] = [];\n            }\n            // Create model and store in cache\n            mockModels[name] = {\n                findOne: async (query)=>{\n                    console.log(`[MockDB] findOne in ${name}:`, query);\n                    const found = collections[name].find((doc)=>Object.entries(query).every(([key, value])=>doc[key] === value));\n                    return found ? {\n                        ...found\n                    } : null;\n                },\n                findById: async (id)=>{\n                    console.log(`[MockDB] findById in ${name}:`, id);\n                    const found = collections[name].find((doc)=>doc._id === id);\n                    return found ? {\n                        ...found\n                    } : null;\n                },\n                find: async (query)=>{\n                    console.log(`[MockDB] find in ${name}:`, query);\n                    return collections[name].filter((doc)=>Object.entries(query).every(([key, value])=>doc[key] === value));\n                },\n                create: async (data)=>{\n                    console.log(`[MockDB] create in ${name}:`, data);\n                    const _id = `mock_${Date.now()}_${Math.random().toString(36).substring(2, 8)}`;\n                    const newDoc = {\n                        ...data,\n                        _id\n                    };\n                    collections[name].push(newDoc);\n                    saveCollection(name, collections[name]);\n                    return {\n                        ...newDoc\n                    };\n                },\n                findByIdAndUpdate: async (id, update, options)=>{\n                    console.log(`[MockDB] findByIdAndUpdate in ${name}:`, id, update);\n                    const index = collections[name].findIndex((doc)=>doc._id === id);\n                    if (index === -1) {\n                        if (options?.upsert) {\n                            const newDoc = {\n                                ...update,\n                                _id: id\n                            };\n                            collections[name].push(newDoc);\n                            saveCollection(name, collections[name]);\n                            return newDoc;\n                        }\n                        return null;\n                    }\n                    // Apply updates\n                    if (update.$set) {\n                        collections[name][index] = {\n                            ...collections[name][index],\n                            ...update.$set\n                        };\n                    } else {\n                        // Direct update\n                        collections[name][index] = {\n                            ...collections[name][index],\n                            ...update\n                        };\n                    }\n                    saveCollection(name, collections[name]);\n                    return {\n                        ...collections[name][index]\n                    };\n                },\n                updateOne: async (filter, update)=>{\n                    console.log(`[MockDB] updateOne in ${name}:`, filter, update);\n                    const index = collections[name].findIndex((doc)=>Object.entries(filter).every(([key, value])=>doc[key] === value));\n                    if (index !== -1) {\n                        if (update.$set) {\n                            collections[name][index] = {\n                                ...collections[name][index],\n                                ...update.$set\n                            };\n                        } else {\n                            collections[name][index] = {\n                                ...collections[name][index],\n                                ...update\n                            };\n                        }\n                        saveCollection(name, collections[name]);\n                        return {\n                            modifiedCount: 1,\n                            acknowledged: true\n                        };\n                    }\n                    return {\n                        modifiedCount: 0,\n                        acknowledged: true\n                    };\n                },\n                deleteOne: async (filter)=>{\n                    console.log(`[MockDB] deleteOne in ${name}:`, filter);\n                    const initialLength = collections[name].length;\n                    collections[name] = collections[name].filter((doc)=>!Object.entries(filter).every(([key, value])=>doc[key] === value));\n                    if (initialLength !== collections[name].length) {\n                        saveCollection(name, collections[name]);\n                    }\n                    return {\n                        deletedCount: initialLength - collections[name].length,\n                        acknowledged: true\n                    };\n                }\n            };\n            return mockModels[name];\n        }\n    };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dbConnect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/mongodb.js\n");

/***/ }),

/***/ "(api-node)/./models/Deal.js":
/*!************************!*\
  !*** ./models/Deal.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst DealSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    userId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        required: true\n    },\n    property_type: String,\n    sniper_score: Number,\n    risk_level: String,\n    recommended_offer: Number,\n    notes: String,\n    createdAt: {\n        type: Date,\n        default: Date.now\n    }\n}, {\n    timestamps: true\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).Deal || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"Deal\", DealSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL21vZGVscy9EZWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnQztBQUVoQyxNQUFNQyxhQUFhLElBQUlELHdEQUFlLENBQUM7SUFDckNHLFFBQVE7UUFBRUMsTUFBTUosd0RBQWUsQ0FBQ0ssS0FBSyxDQUFDQyxRQUFRO1FBQUVDLFVBQVU7SUFBSztJQUMvREMsZUFBZUM7SUFDZkMsY0FBY0M7SUFDZEMsWUFBWUg7SUFDWkksbUJBQW1CRjtJQUNuQkcsT0FBT0w7SUFDUE0sV0FBVztRQUFFWCxNQUFNWTtRQUFNQyxTQUFTRCxLQUFLRSxHQUFHO0lBQUM7QUFDN0MsR0FBRztJQUFFQyxZQUFZO0FBQUs7QUFFdEIsaUVBQWVuQix3REFBZSxDQUFDcUIsSUFBSSxJQUFJckIscURBQWMsQ0FBQyxRQUFRQyxXQUFXQSxFQUFDIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL21vZGVscy9EZWFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcblxuY29uc3QgRGVhbFNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICB1c2VySWQ6IHsgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLCByZXF1aXJlZDogdHJ1ZSB9LFxuICBwcm9wZXJ0eV90eXBlOiBTdHJpbmcsXG4gIHNuaXBlcl9zY29yZTogTnVtYmVyLFxuICByaXNrX2xldmVsOiBTdHJpbmcsXG4gIHJlY29tbWVuZGVkX29mZmVyOiBOdW1iZXIsXG4gIG5vdGVzOiBTdHJpbmcsXG4gIGNyZWF0ZWRBdDogeyB0eXBlOiBEYXRlLCBkZWZhdWx0OiBEYXRlLm5vdyB9LFxufSwgeyB0aW1lc3RhbXBzOiB0cnVlIH0pO1xuXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbHMuRGVhbCB8fCBtb25nb29zZS5tb2RlbChcIkRlYWxcIiwgRGVhbFNjaGVtYSk7Il0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiRGVhbFNjaGVtYSIsIlNjaGVtYSIsInVzZXJJZCIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVxdWlyZWQiLCJwcm9wZXJ0eV90eXBlIiwiU3RyaW5nIiwic25pcGVyX3Njb3JlIiwiTnVtYmVyIiwicmlza19sZXZlbCIsInJlY29tbWVuZGVkX29mZmVyIiwibm90ZXMiLCJjcmVhdGVkQXQiLCJEYXRlIiwiZGVmYXVsdCIsIm5vdyIsInRpbWVzdGFtcHMiLCJtb2RlbHMiLCJEZWFsIiwibW9kZWwiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./models/Deal.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdeals&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fdeals%2Findex.js&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdeals&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fdeals%2Findex.js&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_deals_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/deals/index.js */ \"(api-node)/./pages/api/deals/index.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_deals_index_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_deals_index_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/deals\",\n        pathname: \"/api/deals\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_deals_index_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGZGVhbHMmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRmRlYWxzJTJGaW5kZXguanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDdUQ7QUFDdkQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHNEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxzREFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9kZWFscy9pbmRleC5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCAnZGVmYXVsdCcpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgJ2NvbmZpZycpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZGVhbHNcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9kZWFsc1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdeals&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fdeals%2Findex.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/deals/index.js":
/*!**********************************!*\
  !*** ./pages/api/deals/index.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/react */ \"next-auth/react\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/mongodb */ \"(api-node)/./lib/mongodb.js\");\n/* harmony import */ var _models_Deal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../models/Deal */ \"(api-node)/./models/Deal.js\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nasync function handler(req, res) {\n    const session = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_0__.getSession)({\n        req\n    });\n    // Check if user is authenticated\n    if (!session) {\n        return res.status(401).json({\n            error: 'You must be signed in to access this endpoint'\n        });\n    }\n    // Extract user ID from session\n    const userId = session.user.id;\n    // Connect to the database\n    try {\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    } catch (error) {\n        console.error('Database connection error:', error);\n        return res.status(500).json({\n            error: 'Database connection failed'\n        });\n    }\n    // Handle different HTTP methods\n    switch(req.method){\n        case 'GET':\n            return handleGet(req, res, userId);\n        case 'POST':\n            return handlePost(req, res, userId);\n        default:\n            return res.status(405).json({\n                error: 'Method not allowed'\n            });\n    }\n}\n// GET handler - Get all deals for a user\nasync function handleGet(req, res, userId) {\n    try {\n        // Convert string ID to MongoDB ObjectId\n        const objectId = mongoose__WEBPACK_IMPORTED_MODULE_3___default().Types.ObjectId.isValid(userId) ? new (mongoose__WEBPACK_IMPORTED_MODULE_3___default().Types).ObjectId(userId) : userId; // Fall back to string ID if not valid ObjectId\n        // Query all deals for the user\n        const deals = await _models_Deal__WEBPACK_IMPORTED_MODULE_2__[\"default\"].find({\n            userId: objectId\n        }).sort({\n            createdAt: -1\n        }) // Latest first\n        .lean(); // Convert to plain JavaScript objects\n        return res.status(200).json(deals);\n    } catch (error) {\n        console.error('Error fetching deals:', error);\n        return res.status(500).json({\n            error: 'Failed to fetch deals'\n        });\n    }\n}\n// POST handler - Create a new deal\nasync function handlePost(req, res, userId) {\n    try {\n        // Validate request body\n        const dealData = req.body;\n        if (!dealData || typeof dealData !== 'object') {\n            return res.status(400).json({\n                error: 'Invalid deal data'\n            });\n        }\n        // Convert string ID to MongoDB ObjectId\n        const objectId = mongoose__WEBPACK_IMPORTED_MODULE_3___default().Types.ObjectId.isValid(userId) ? new (mongoose__WEBPACK_IMPORTED_MODULE_3___default().Types).ObjectId(userId) : userId; // Fall back to string ID if not valid ObjectId\n        // Create a new deal\n        const deal = new _models_Deal__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n            ...dealData,\n            userId: objectId\n        });\n        // Save the deal\n        const savedDeal = await deal.save();\n        // Return the saved deal\n        return res.status(201).json(savedDeal);\n    } catch (error) {\n        console.error('Error creating deal:', error);\n        return res.status(500).json({\n            error: 'Failed to create deal'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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S0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBd0I7SUFDL0Q7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9wYWdlcy9hcGkvZGVhbHMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0U2Vzc2lvbiB9IGZyb20gJ25leHQtYXV0aC9yZWFjdCc7XG5pbXBvcnQgZGJDb25uZWN0IGZyb20gJy4uLy4uLy4uL2xpYi9tb25nb2RiJztcbmltcG9ydCBEZWFsIGZyb20gJy4uLy4uLy4uL21vZGVscy9EZWFsJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcbiAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGdldFNlc3Npb24oeyByZXEgfSk7XG4gIFxuICAvLyBDaGVjayBpZiB1c2VyIGlzIGF1dGhlbnRpY2F0ZWRcbiAgaWYgKCFzZXNzaW9uKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3I6ICdZb3UgbXVzdCBiZSBzaWduZWQgaW4gdG8gYWNjZXNzIHRoaXMgZW5kcG9pbnQnIH0pO1xuICB9XG4gIFxuICAvLyBFeHRyYWN0IHVzZXIgSUQgZnJvbSBzZXNzaW9uXG4gIGNvbnN0IHVzZXJJZCA9IHNlc3Npb24udXNlci5pZDtcbiAgXG4gIC8vIENvbm5lY3QgdG8gdGhlIGRhdGFiYXNlXG4gIHRyeSB7XG4gICAgYXdhaXQgZGJDb25uZWN0KCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgY29ubmVjdGlvbiBlcnJvcjonLCBlcnJvcik7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdEYXRhYmFzZSBjb25uZWN0aW9uIGZhaWxlZCcgfSk7XG4gIH1cbiAgXG4gIC8vIEhhbmRsZSBkaWZmZXJlbnQgSFRUUCBtZXRob2RzXG4gIHN3aXRjaCAocmVxLm1ldGhvZCkge1xuICAgIGNhc2UgJ0dFVCc6XG4gICAgICByZXR1cm4gaGFuZGxlR2V0KHJlcSwgcmVzLCB1c2VySWQpO1xuICAgIGNhc2UgJ1BPU1QnOlxuICAgICAgcmV0dXJuIGhhbmRsZVBvc3QocmVxLCByZXMsIHVzZXJJZCk7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IGVycm9yOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyB9KTtcbiAgfVxufVxuXG4vLyBHRVQgaGFuZGxlciAtIEdldCBhbGwgZGVhbHMgZm9yIGEgdXNlclxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlR2V0KHJlcSwgcmVzLCB1c2VySWQpIHtcbiAgdHJ5IHtcbiAgICAvLyBDb252ZXJ0IHN0cmluZyBJRCB0byBNb25nb0RCIE9iamVjdElkXG4gICAgY29uc3Qgb2JqZWN0SWQgPSBtb25nb29zZS5UeXBlcy5PYmplY3RJZC5pc1ZhbGlkKHVzZXJJZCkgXG4gICAgICA/IG5ldyBtb25nb29zZS5UeXBlcy5PYmplY3RJZCh1c2VySWQpXG4gICAgICA6IHVzZXJJZDsgLy8gRmFsbCBiYWNrIHRvIHN0cmluZyBJRCBpZiBub3QgdmFsaWQgT2JqZWN0SWRcbiAgICBcbiAgICAvLyBRdWVyeSBhbGwgZGVhbHMgZm9yIHRoZSB1c2VyXG4gICAgY29uc3QgZGVhbHMgPSBhd2FpdCBEZWFsLmZpbmQoeyB1c2VySWQ6IG9iamVjdElkIH0pXG4gICAgICAuc29ydCh7IGNyZWF0ZWRBdDogLTEgfSkgLy8gTGF0ZXN0IGZpcnN0XG4gICAgICAubGVhbigpOyAvLyBDb252ZXJ0IHRvIHBsYWluIEphdmFTY3JpcHQgb2JqZWN0c1xuICAgIFxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihkZWFscyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgZGVhbHM6JywgZXJyb3IpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnRmFpbGVkIHRvIGZldGNoIGRlYWxzJyB9KTtcbiAgfVxufVxuXG4vLyBQT1NUIGhhbmRsZXIgLSBDcmVhdGUgYSBuZXcgZGVhbFxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlUG9zdChyZXEsIHJlcywgdXNlcklkKSB7XG4gIHRyeSB7XG4gICAgLy8gVmFsaWRhdGUgcmVxdWVzdCBib2R5XG4gICAgY29uc3QgZGVhbERhdGEgPSByZXEuYm9keTtcbiAgICBpZiAoIWRlYWxEYXRhIHx8IHR5cGVvZiBkZWFsRGF0YSAhPT0gJ29iamVjdCcpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnSW52YWxpZCBkZWFsIGRhdGEnIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyBDb252ZXJ0IHN0cmluZyBJRCB0byBNb25nb0RCIE9iamVjdElkXG4gICAgY29uc3Qgb2JqZWN0SWQgPSBtb25nb29zZS5UeXBlcy5PYmplY3RJZC5pc1ZhbGlkKHVzZXJJZCkgXG4gICAgICA/IG5ldyBtb25nb29zZS5UeXBlcy5PYmplY3RJZCh1c2VySWQpXG4gICAgICA6IHVzZXJJZDsgLy8gRmFsbCBiYWNrIHRvIHN0cmluZyBJRCBpZiBub3QgdmFsaWQgT2JqZWN0SWRcbiAgICBcbiAgICAvLyBDcmVhdGUgYSBuZXcgZGVhbFxuICAgIGNvbnN0IGRlYWwgPSBuZXcgRGVhbCh7XG4gICAgICAuLi5kZWFsRGF0YSxcbiAgICAgIHVzZXJJZDogb2JqZWN0SWRcbiAgICB9KTtcbiAgICBcbiAgICAvLyBTYXZlIHRoZSBkZWFsXG4gICAgY29uc3Qgc2F2ZWREZWFsID0gYXdhaXQgZGVhbC5zYXZlKCk7XG4gICAgXG4gICAgLy8gUmV0dXJuIHRoZSBzYXZlZCBkZWFsXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAxKS5qc29uKHNhdmVkRGVhbCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY3JlYXRpbmcgZGVhbDonLCBlcnJvcik7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdGYWlsZWQgdG8gY3JlYXRlIGRlYWwnIH0pO1xuICB9XG59Il0sIm5hbWVzIjpbImdldFNlc3Npb24iLCJkYkNvbm5lY3QiLCJEZWFsIiwibW9uZ29vc2UiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwic2Vzc2lvbiIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsInVzZXJJZCIsInVzZXIiLCJpZCIsImNvbnNvbGUiLCJtZXRob2QiLCJoYW5kbGVHZXQiLCJoYW5kbGVQb3N0Iiwib2JqZWN0SWQiLCJUeXBlcyIsIk9iamVjdElkIiwiaXNWYWxpZCIsImRlYWxzIiwiZmluZCIsInNvcnQiLCJjcmVhdGVkQXQiLCJsZWFuIiwiZGVhbERhdGEiLCJib2R5IiwiZGVhbCIsInNhdmVkRGVhbCIsInNhdmUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/deals/index.js\n");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "next-auth/react":
/*!**********************************!*\
  !*** external "next-auth/react" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("next-auth/react");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdeals&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fdeals%2Findex.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();